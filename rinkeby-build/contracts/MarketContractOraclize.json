{
  "contractName": "MarketContractOraclize",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "creator",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lastPrice",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lastPriceQueryResult",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PRICE_DECIMAL_PLACES",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isSettled",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isCollateralPoolContractLinked",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "QUERY_CALLBACK_GAS",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "getQtyFilledOrCancelledFromOrder",
      "outputs": [
        {
          "name": "",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ORACLE_DATA_SOURCE",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ORACLE_QUERY",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "CONTRACT_NAME",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BASE_TOKEN_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MKT_TOKEN_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "marketCollateralPoolAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "orderAddresses",
          "type": "address[3]"
        },
        {
          "name": "unsignedOrderValues",
          "type": "uint256[5]"
        },
        {
          "name": "orderQty",
          "type": "int256"
        },
        {
          "name": "qtyToFill",
          "type": "int256"
        },
        {
          "name": "v",
          "type": "uint8"
        },
        {
          "name": "r",
          "type": "bytes32"
        },
        {
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "tradeOrder",
      "outputs": [
        {
          "name": "filledQty",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PRICE_CAP",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "EXPIRATION",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "poolAddress",
          "type": "address"
        }
      ],
      "name": "setCollateralPoolContractAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PRICE_FLOOR",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "QTY_MULTIPLIER",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "settlementPrice",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newCreator",
          "type": "address"
        }
      ],
      "name": "transferCreator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "orderAddresses",
          "type": "address[3]"
        },
        {
          "name": "unsignedOrderValues",
          "type": "uint256[5]"
        },
        {
          "name": "orderQty",
          "type": "int256"
        },
        {
          "name": "qtyToCancel",
          "type": "int256"
        }
      ],
      "name": "cancelOrder",
      "outputs": [
        {
          "name": "qtyCancelled",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "contractName",
          "type": "string"
        },
        {
          "name": "creatorAddress",
          "type": "address"
        },
        {
          "name": "marketTokenAddress",
          "type": "address"
        },
        {
          "name": "baseTokenAddress",
          "type": "address"
        },
        {
          "name": "contractSpecs",
          "type": "uint256[5]"
        },
        {
          "name": "oracleDataSource",
          "type": "string"
        },
        {
          "name": "oracleQuery",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "price",
          "type": "string"
        }
      ],
      "name": "UpdatedLastPrice",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "settlePrice",
          "type": "uint256"
        }
      ],
      "name": "ContractSettled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "UpdatedUserBalance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "UpdatedPoolBalance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "errorCode",
          "type": "uint8"
        },
        {
          "indexed": true,
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "Error",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "feeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "filledQty",
          "type": "int256"
        },
        {
          "indexed": false,
          "name": "paidMakerFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "paidTakerFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "OrderFilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "feeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "cancelledQty",
          "type": "int256"
        },
        {
          "indexed": true,
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "OrderCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "currentCreator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newCreator",
          "type": "address"
        }
      ],
      "name": "CreatorTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "requestEarlySettlement",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "myid",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "queryID",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode":
    "0x60806040526000600c60006101000a81548160ff0219169083151502179055506000600c60016101000a81548160ff0219169083151502179055503480156200004757600080fd5b506040516200552c3803806200552c8339810180604052810190808051820192919060200180519060200190929190805190602001909291908051906020019092919091908260a001805182019291906020018051820192919050505060008787878787336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166384281dcc336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156200022b57600080fd5b505af115801562000240573d6000803e3d6000fd5b505050506040513d60208110156200025757600080fd5b810190808051906020019092919050505015156200027457600080fd5b8060006005811015156200028457fe5b60200201516006819055508060016005811015156200029f57fe5b6020020151600581905550600654600554111515620002bd57600080fd5b806002600581101515620002cd57fe5b6020020151600781905550806003600581101515620002e857fe5b60200201516008819055508060046005811015156200030357fe5b6020020151600981905550426009541115156200031f57600080fd5b84600390805190602001906200033792919062001582565b5081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050506200042060017f01000000000000000000000000000000000000000000000000000000000000000260107f01000000000000000000000000000000000000000000000000000000000000000217620004a4640100000000026401000000009004565b82601390805190602001906200043892919062001582565b5081601490805190602001906200045192919062001582565b50426009541115156200046357600080fd5b624f1a009050804260095403111515156200047d57600080fd5b620004966200085c640100000000026401000000009004565b505050505050505062001631565b6000601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480620005275750600062000525601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1662000a0d640100000000026401000000009004565b145b156200054a5762000548600062000a18640100000000026401000000009004565b505b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620005d157600080fd5b505af1158015620005e6573d6000803e3d6000fd5b505050506040513d6020811015620005fd57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156200076a57601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620006ec57600080fd5b505af115801562000701573d6000803e3d6000fd5b505050506040513d60208110156200071857600080fd5b8101908080519060200190929190505050601160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663688dcfd7826040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001915050600060405180830381600087803b1580156200084057600080fd5b505af115801562000855573d6000803e3d6000fd5b5050505050565b6000620009bc60095460138054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620008ff5780601f10620008d357610100808354040283529160200191620008ff565b820191906000526020600020905b815481529060010190602001808311620008e157829003601f168201915b505050505060148054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200099e5780601f1062000972576101008083540402835291602001916200099e565b820191906000526020600020905b8154815290600101906020018083116200098057829003601f168201915b5050505050620249f062000a3a640100000000026401000000009004565b90506000600102816000191614151515620009d657600080fd5b600160166000836000191660001916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000813b9050919050565b600062000a3362001007640100000000026401000000009004565b9050919050565b6000806000601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148062000ac05750600062000abe601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1662000a0d640100000000026401000000009004565b145b1562000ae35762000ae1600062000a18640100000000026401000000009004565b505b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562000b6a57600080fd5b505af115801562000b7f573d6000803e3d6000fd5b505050506040513d602081101562000b9657600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151562000d0357601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562000c8557600080fd5b505af115801562000c9a573d6000803e3d6000fd5b505050506040513d602081101562000cb157600080fd5b8101908080519060200190929190505050601160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b8381101562000db657808201518184015260208101905062000d99565b50505050905090810190601f16801562000de45780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b15801562000e0557600080fd5b505af115801562000e1a573d6000803e3d6000fd5b505050506040513d602081101562000e3157600080fd5b81019080805190602001909291905050509050601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c51be90f82888888886040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b8381101562000f0457808201518184015260208101905062000ee7565b50505050905090810190601f16801562000f325780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b8381101562000f6d57808201518184015260208101905062000f50565b50505050905090810190601f16801562000f9b5780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b15801562000fbe57600080fd5b505af115801562000fd3573d6000803e3d6000fd5b50505050506040513d602081101562000feb57600080fd5b8101908080519060200190929190505050915050949350505050565b60008062001038731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed62000a0d640100000000026401000000009004565b1115620010ed57731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620010e36040805190810160405280600b81526020017f6574685f6d61696e6e657400000000000000000000000000000000000000000081525062001566640100000000026401000000009004565b6001905062001563565b60006200111d73c03a2615d5efaf5f49f60b7bb6583eaec212fdf162000a0d640100000000026401000000009004565b1115620011d25773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620011c86040805190810160405280600c81526020017f6574685f726f707374656e33000000000000000000000000000000000000000081525062001566640100000000026401000000009004565b6001905062001563565b60006200120273b7a07bcf2ba2f2703b24c0691b5278999c59ac7e62000a0d640100000000026401000000009004565b1115620012b75773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620012ad6040805190810160405280600981526020017f6574685f6b6f76616e000000000000000000000000000000000000000000000081525062001566640100000000026401000000009004565b6001905062001563565b6000620012e773146500cfd35b22e4a392fe0adc06de1a1368ed4862000a0d640100000000026401000000009004565b11156200139c5773146500cfd35b22e4a392fe0adc06de1a1368ed48601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620013926040805190810160405280600b81526020017f6574685f72696e6b65627900000000000000000000000000000000000000000081525062001566640100000000026401000000009004565b6001905062001563565b6000620013cc736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47562000a0d640100000000026401000000009004565b11156200143257736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905062001563565b6000620014627320e12a1f859b3feae5fb2a0a32c18f5a65555bbf62000a0d640100000000026401000000009004565b1115620014c8577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905062001563565b6000620014f87351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa62000a0d640100000000026401000000009004565b11156200155e577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905062001563565b600090505b90565b80601290805190602001906200157e92919062001582565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620015c557805160ff1916838001178555620015f6565b82800160010185558215620015f6579182015b82811115620015f5578251825591602001919060010190620015d8565b5b50905062001605919062001609565b5090565b6200162e91905b808211156200162a57600081600090555060010162001610565b5090565b90565b613eeb80620016416000396000f300608060405260043610610154576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806302d05d3f14610159578063053f14da146101b05780630c8eb675146101db57806327dc297e1461026b5780632fed1b00146102e25780633270bb5b1461030d57806338bbfa501461033c5780633b3c4ae9146103f9578063411449bb146104285780634c258eb11461045357806356357d91146104985780635ea7867a14610528578063614d08f8146105b85780636cee3abb146106485780636db7f77c1461069f578063798ddbc8146106a957806390253ade14610700578063930a9d9214610757578063b5471dee146107df578063bb4b57341461080a578063c201293b14610835578063c32b1dfa14610878578063ca361d67146108a3578063f348e8b2146108ce578063fa3fa196146108f9578063fc51b9c51461093c575b600080fd5b34801561016557600080fd5b5061016e61099b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101bc57600080fd5b506101c56109c0565b6040518082815260200191505060405180910390f35b3480156101e757600080fd5b506101f06109c6565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610230578082015181840152602081019050610215565b50505050905090810190601f16801561025d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561027757600080fd5b506102e06004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610a64565b005b3480156102ee57600080fd5b506102f7610aa7565b6040518082815260200191505060405180910390f35b34801561031957600080fd5b50610322610aad565b604051808215151515815260200191505060405180910390f35b34801561034857600080fd5b506103f76004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610ac0565b005b34801561040557600080fd5b5061040e610c32565b604051808215151515815260200191505060405180910390f35b34801561043457600080fd5b5061043d610c45565b6040518082815260200191505060405180910390f35b34801561045f57600080fd5b506104826004803603810190808035600019169060200190929190505050610c4c565b6040518082815260200191505060405180910390f35b3480156104a457600080fd5b506104ad610c69565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104ed5780820151818401526020810190506104d2565b50505050905090810190601f16801561051a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561053457600080fd5b5061053d610d07565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561057d578082015181840152602081019050610562565b50505050905090810190601f1680156105aa5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156105c457600080fd5b506105cd610da5565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561060d5780820151818401526020810190506105f2565b50505050905090810190601f16801561063a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561065457600080fd5b5061065d610e43565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106a7610e69565b005b3480156106b557600080fd5b506106be6110b7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561070c57600080fd5b506107156110dd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561076357600080fd5b506107c9600480360381019080806060019091929192908060a0019091929192908035906020019092919080359060200190929190803560ff16906020019092919080356000191690602001909291908035600019169060200190929190505050611103565b6040518082815260200191505060405180910390f35b3480156107eb57600080fd5b506107f4611acb565b6040518082815260200191505060405180910390f35b34801561081657600080fd5b5061081f611ad1565b6040518082815260200191505060405180910390f35b34801561084157600080fd5b50610876600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ad7565b005b34801561088457600080fd5b5061088d611d24565b6040518082815260200191505060405180910390f35b3480156108af57600080fd5b506108b8611d2a565b6040518082815260200191505060405180910390f35b3480156108da57600080fd5b506108e3611d30565b6040518082815260200191505060405180910390f35b34801561090557600080fd5b5061093a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d36565b005b34801561094857600080fd5b50610985600480360381019080806060019091929192908060a0019091929192908035906020019092919080359060200190929190505050611e8b565b6040518082815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a5481565b60158054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a5c5780601f10610a3157610100808354040283529160200191610a5c565b820191906000526020600020905b815481529060010190602001808311610a3f57829003601f168201915b505050505081565b610aa3828260006040519080825280601f01601f191660200182016040528015610a9d5781602001602082028038833980820191505090505b50610ac0565b5050565b60075481565b600c60009054906101000a900460ff1681565b610ac861210f565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b0157600080fd5b60166000846000191660001916815260200190815260200160002060009054906101000a900460ff161515610b3557600080fd5b8160159080519060200190610b4b929190613d88565b50610b5882600754612471565b600a819055507f3e19f2256bddc30aeab8054ccbd86723452d07f687b94441de69c05ee212dafa826040518080602001828103825283818151815260200191508051906020019080838360005b83811015610bc0578082015181840152602081019050610ba5565b50505050905090810190601f168015610bed5780820380516001836020036101000a031916815260200191505b509250505060405180910390a1610c02612765565b60166000846000191660001916815260200190815260200160002060006101000a81549060ff0219169055505050565b600c60019054906101000a900460ff1681565b620249f081565b6000610c6282600e61283590919063ffffffff16565b9050919050565b60138054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cff5780601f10610cd457610100808354040283529160200191610cff565b820191906000526020600020905b815481529060010190602001808311610ce257829003601f168201915b505050505081565b60148054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d9d5780601f10610d7257610100808354040283529160200191610d9d565b820191906000526020600020905b815481529060010190602001808311610d8057829003601f168201915b505050505081565b60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e3b5780601f10610e1057610100808354040283529160200191610e3b565b820191906000526020600020905b815481529060010190602001808311610e1e57829003601f168201915b505050505081565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610f1360138054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f055780601f10610eda57610100808354040283529160200191610f05565b820191906000526020600020905b815481529060010190602001808311610ee857829003601f168201915b5050505050620249f061288c565b9150813410151515610f2457600080fd5b61106660138054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fbd5780601f10610f9257610100808354040283529160200191610fbd565b820191906000526020600020905b815481529060010190602001808311610fa057829003601f168201915b505050505060148054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110585780601f1061102d57610100808354040283529160200191611058565b820191906000526020600020905b81548152906001019060200180831161103b57829003601f168201915b5050505050620249f0612c69565b9050600060010281600019161415151561107f57600080fd5b600160166000836000191660001916815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c60029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061110d613e08565b6000806000806000600c60019054906101000a900460ff16801561113e5750600c60009054906101000a900460ff16155b151561114957600080fd5b60008c1415801561115b575060008b14155b801561117657506111758b8d6131fc90919063ffffffff16565b5b151561118157600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfab472f30336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b15801561127257600080fd5b505af1158015611286573d6000803e3d6000fd5b505050506040513d602081101561129c57600080fd5b810190808051906020019092919050505015156112b857600080fd5b61132f8e600380602002604051908101604052809291908260036020028082843782019150505050508e600580602002604051908101604052809291908260056020028082843782019150505050508e3073ffffffffffffffffffffffffffffffffffffffff16613216909392919063ffffffff16565b9550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfab472f3088600001516040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b15801561142657600080fd5b505af115801561143a573d6000803e3d6000fd5b505050506040513d602081101561145057600080fd5b8101908080519060200190929190505050151561146c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16866020015173ffffffffffffffffffffffffffffffffffffffff1614806114da57503373ffffffffffffffffffffffffffffffffffffffff16866020015173ffffffffffffffffffffffffffffffffffffffff16145b15156114e557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16866000015173ffffffffffffffffffffffffffffffffffffffff161415801561155a5750856020015173ffffffffffffffffffffffffffffffffffffffff16866000015173ffffffffffffffffffffffffffffffffffffffff1614155b151561156557600080fd5b856000015173ffffffffffffffffffffffffffffffffffffffff1673__OrderLib______________________________638163681e90918861010001518d8d8d6040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200185600019166000191681526020018460ff1660ff168152602001836000191660001916815260200182600019166000191681526020019550505050505060206040518083038186803b15801561165b57600080fd5b505af415801561166f573d6000803e3d6000fd5b505050506040513d602081101561168557600080fd5b810190808051906020019092919050505015156116a157600080fd5b8560c00151421015156116fa5785610100015160001916600060018111156116c557fe5b7fe6104340582083fe7674a149f8da127b9d3d7f74a88ccd7610562eb5b61b919360405160405180910390a360009650611aba565b61171a61170b876101000151610c4c565b8d6133a890919063ffffffff16565b94506000851415611770578561010001516000191660018081111561173b57fe5b7fe6104340582083fe7674a149f8da127b9d3d7f74a88ccd7610562eb5b61b919360405160405180910390a360009650611aba565b61177a858c6133bf565b9650600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663eeaba0838760000151338a8a60a001516040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001945050505050600060405180830381600087803b15801561188557600080fd5b505af1158015611899573d6000803e3d6000fd5b505050506118b886610100015188600e6133e89092919063ffffffff16565b6000935060009250600073ffffffffffffffffffffffffffffffffffffffff16866040015173ffffffffffffffffffffffffffffffffffffffff16141515611a0d576119038761343e565b915061190e8761343e565b9050600086606001511115611990576119368282886060015161345c9092919063ffffffff16565b935061198f8660000151876040015186600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661347c909392919063ffffffff16565b5b600086608001511115611a0c576119b68282886080015161345c9092919063ffffffff16565b9250611a0b33876040015185600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661347c909392919063ffffffff16565b5b5b856040015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16876000015173ffffffffffffffffffffffffffffffffffffffff167f75cbdb818111666ee7e206d94dfeb2d679055e8bc6f34b6f5d30272edd4099908a88888c610100015160405180858152602001848152602001838152602001826000191660001916815260200194505050505060405180910390a48696505b505050505050979650505050505050565b60055481565b60095481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611b3257600080fd5b600c60019054906101000a900460ff16151515611b4e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611b8a57600080fd5b80600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503073ffffffffffffffffffffffffffffffffffffffff16600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637bb55cd26040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611c6857600080fd5b505af1158015611c7c573d6000803e3d6000fd5b505050506040513d6020811015611c9257600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16141515611cc557600080fd5b80600c60026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600c60016101000a81548160ff02191690831515021790555050565b60065481565b60085481565b600b5481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611d9157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611dcd57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f7f11fe0c7098e1a76afcc68f35abaa07ef156fa7d6dd2d39664812fe37348d1660405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000611e95613e08565b6000808414158015611eb65750611eb585856131fc90919063ffffffff16565b5b1515611ec157600080fd5b600c60009054906101000a900460ff16151515611edd57600080fd5b611f5487600380602002604051908101604052809291908260036020028082843782019150505050508760058060200260405190810160405280929190826005602002808284378201915050505050873073ffffffffffffffffffffffffffffffffffffffff16613216909392919063ffffffff16565b91503373ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff16141515611f9457600080fd5b8160c0015142101515611fed578161010001516000191660006001811115611fb857fe5b7fe6104340582083fe7674a149f8da127b9d3d7f74a88ccd7610562eb5b61b919360405160405180910390a360009250612105565b61200d611ffe836101000151610c4c565b866133a890919063ffffffff16565b90506000811415612063578161010001516000191660018081111561202e57fe5b7fe6104340582083fe7674a149f8da127b9d3d7f74a88ccd7610562eb5b61b919360405160405180910390a360009250612105565b61206d84826133bf565b925061208a82610100015184600e61359c9092919063ffffffff16565b81610100015160001916826040015173ffffffffffffffffffffffffffffffffffffffff16836000015173ffffffffffffffffffffffffffffffffffffffff167f7de4479e80e82e22edb1e0010433c8befc804c34988024fa0b0234715102cd8f866040518082815260200191505060405180910390a48292505b5050949350505050565b600080601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806121815750600061217f601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166135f2565b145b156121925761219060006135fd565b505b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561221857600080fd5b505af115801561222c573d6000803e3d6000fd5b505050506040513d602081101561224257600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156123ab57601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561232f57600080fd5b505af1158015612343573d6000803e3d6000fd5b505050506040513d602081101561235957600080fd5b8101908080519060200190929190505050601160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561243157600080fd5b505af1158015612445573d6000803e3d6000fd5b505050506040513d602081101561245b57600080fd5b8101908080519060200190929190505050905090565b6000606060008060008693506000925060009150600090505b83518110156127465760307f01000000000000000000000000000000000000000000000000000000000000000284828151811015156124c557fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916101580156125dd575060397f010000000000000000000000000000000000000000000000000000000000000002848281518110151561256d57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611155b1561268e5781156126005760008614156125f657612746565b8580600190039650505b600a830292506030848281518110151561261657fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f010000000000000000000000000000000000000000000000000000000000000090040383019250612739565b602e7f01000000000000000000000000000000000000000000000000000000000000000284828151811015156126c057fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561273857600191505b5b808060010191505061248a565b60008611156127585785600a0a830292505b8294505050505092915050565b6000600c60009054906101000a900460ff161561278157612832565b6009544211156127b0576001600c60006101000a81548160ff021916908315150217905550600a549050612812565b600554600a541015156127e2576001600c60006101000a81548160ff0219169083151502179055506005549050612811565b600654600a54111515612810576001600c60006101000a81548160ff02191690831515021790555060065490505b5b5b600c60009054906101000a900460ff1615612831576128308161360e565b5b5b50565b600061288483600101600084600019166000191681526020019081526020016000205484600001600085600019166000191681526020019081526020016000205461364f90919063ffffffff16565b905092915050565b600080601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806128fe575060006128fc601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166135f2565b145b1561290f5761290d60006135fd565b505b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561299557600080fd5b505af11580156129a9573d6000803e3d6000fd5b505050506040513d60208110156129bf57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515612b2857601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612aac57600080fd5b505af1158015612ac0573d6000803e3d6000fd5b505050506040513d6020811015612ad657600080fd5b8101908080519060200190929190505050601160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc84846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015612bd9578082015181840152602081019050612bbe565b50505050905090810190601f168015612c065780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015612c2657600080fd5b505af1158015612c3a573d6000803e3d6000fd5b505050506040513d6020811015612c5057600080fd5b8101908080519060200190929190505050905092915050565b6000806000601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480612cdd57506000612cdb601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166135f2565b145b15612cee57612cec60006135fd565b505b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612d7457600080fd5b505af1158015612d88573d6000803e3d6000fd5b505050506040513d6020811015612d9e57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515612f0757601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612e8b57600080fd5b505af1158015612e9f573d6000803e3d6000fd5b505050506040513d6020811015612eb557600080fd5b8101908080519060200190929190505050601160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015612fb8578082015181840152602081019050612f9d565b50505050905090810190601f168015612fe55780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b15801561300557600080fd5b505af1158015613019573d6000803e3d6000fd5b505050506040513d602081101561302f57600080fd5b81019080805190602001909291905050509050601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c51be90f8260008888886040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b838110156131015780820151818401526020810190506130e6565b50505050905090810190601f16801561312e5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b8381101561316757808201518184015260208101905061314c565b50505050905090810190601f1680156131945780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b1580156131b657600080fd5b505af11580156131ca573d6000803e3d6000fd5b50505050506040513d60208110156131e157600080fd5b81019080805190602001909291905050509150509392505050565b60008183148061320e57506000828402135b905092915050565b61321e613e08565b83600060038110151561322d57fe5b6020020151816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505083600160038110151561327857fe5b6020020151816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508360026003811015156132c357fe5b6020020151816040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505082600060058110151561330e57fe5b602002015181606001818152505082600160058110151561332b57fe5b602002015181608001818152505082600260058110151561334857fe5b60200201518160a001818152505082600360058110151561336557fe5b60200201518160c0018181525050818160e0018181525050613389858585856136b7565b8161010001906000191690816000191681525050809050949350505050565b60006133b7838360000361364f565b905092915050565b60006133ca8261343e565b6133d38461343e565b106133de57816133e0565b825b905092915050565b6134188184600001600085600019166000191681526020019081526020016000205461364f90919063ffffffff16565b836000016000846000191660001916815260200190815260200160002081905550505050565b60008082121561345357816000039050613457565b8190505b919050565b60008161346985856138a5565b81151561347257fe5b0490509392505050565b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd8484846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561355357600080fd5b505af1158015613567573d6000803e3d6000fd5b505050506040513d602081101561357d57600080fd5b8101908080519060200190929190505050151561359657fe5b50505050565b6135cc8184600101600085600019166000191681526020019081526020016000205461364f90919063ffffffff16565b836001016000846000191660001916815260200190815260200160002081905550505050565b6000813b9050919050565b60006136076138d8565b9050919050565b80600b819055507f68170b705528d3ff1d324cda28eb28cc3d11ce81207f157c05e11c18411a013c816040518082815260200191505060405180910390a150565b600080828401905061366184846131fc565b151561366f578091506136b0565b600084121515613695578360ff60019060020a021903831315151561369057fe5b6136ac565b8360ff60019060020a020383121515156136ab57fe5b5b8091505b5092915050565b6000848460006003811015156136c957fe5b60200201518560016003811015156136dd57fe5b60200201518660026003811015156136f157fe5b602002015186600060058110151561370557fe5b602002015187600160058110151561371957fe5b602002015188600260058110151561372d57fe5b602002015189600360058110151561374157fe5b60200201518a600460058110151561375557fe5b60200201518a604051808b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018781526020018681526020018581526020018481526020018381526020018281526020019a505050505050505050505060405180910390209050949350505050565b600080828402905060008414806138c657508284828115156138c357fe5b04145b15156138ce57fe5b8091505092915050565b6000806138f8731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6135f2565b111561399a57731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506139916040805190810160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250613d6e565b60019050613d6b565b60006139b973c03a2615d5efaf5f49f60b7bb6583eaec212fdf16135f2565b1115613a5b5773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613a526040805190810160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250613d6e565b60019050613d6b565b6000613a7a73b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6135f2565b1115613b1c5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613b136040805190810160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250613d6e565b60019050613d6b565b6000613b3b73146500cfd35b22e4a392fe0adc06de1a1368ed486135f2565b1115613bdd5773146500cfd35b22e4a392fe0adc06de1a1368ed48601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613bd46040805190810160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250613d6e565b60019050613d6b565b6000613bfc736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756135f2565b1115613c6057736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050613d6b565b6000613c7f7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6135f2565b1115613ce3577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050613d6b565b6000613d027351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6135f2565b1115613d66577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050613d6b565b600090505b90565b8060129080519060200190613d84929190613d88565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613dc957805160ff1916838001178555613df7565b82800160010185558215613df7579182015b82811115613df6578251825591602001919060010190613ddb565b5b509050613e049190613e9a565b5090565b61012060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160008152602001600080191681525090565b613ebc91905b80821115613eb8576000816000905550600101613ea0565b5090565b905600a165627a7a72305820b1c051d015fab18ca90102d5eed843e91ecd4587d355ba9cf73a0ce6d324d96c0029",
  "deployedBytecode":
    "0x608060405260043610610154576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806302d05d3f14610159578063053f14da146101b05780630c8eb675146101db57806327dc297e1461026b5780632fed1b00146102e25780633270bb5b1461030d57806338bbfa501461033c5780633b3c4ae9146103f9578063411449bb146104285780634c258eb11461045357806356357d91146104985780635ea7867a14610528578063614d08f8146105b85780636cee3abb146106485780636db7f77c1461069f578063798ddbc8146106a957806390253ade14610700578063930a9d9214610757578063b5471dee146107df578063bb4b57341461080a578063c201293b14610835578063c32b1dfa14610878578063ca361d67146108a3578063f348e8b2146108ce578063fa3fa196146108f9578063fc51b9c51461093c575b600080fd5b34801561016557600080fd5b5061016e61099b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101bc57600080fd5b506101c56109c0565b6040518082815260200191505060405180910390f35b3480156101e757600080fd5b506101f06109c6565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610230578082015181840152602081019050610215565b50505050905090810190601f16801561025d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561027757600080fd5b506102e06004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610a64565b005b3480156102ee57600080fd5b506102f7610aa7565b6040518082815260200191505060405180910390f35b34801561031957600080fd5b50610322610aad565b604051808215151515815260200191505060405180910390f35b34801561034857600080fd5b506103f76004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610ac0565b005b34801561040557600080fd5b5061040e610c32565b604051808215151515815260200191505060405180910390f35b34801561043457600080fd5b5061043d610c45565b6040518082815260200191505060405180910390f35b34801561045f57600080fd5b506104826004803603810190808035600019169060200190929190505050610c4c565b6040518082815260200191505060405180910390f35b3480156104a457600080fd5b506104ad610c69565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104ed5780820151818401526020810190506104d2565b50505050905090810190601f16801561051a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561053457600080fd5b5061053d610d07565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561057d578082015181840152602081019050610562565b50505050905090810190601f1680156105aa5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156105c457600080fd5b506105cd610da5565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561060d5780820151818401526020810190506105f2565b50505050905090810190601f16801561063a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561065457600080fd5b5061065d610e43565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106a7610e69565b005b3480156106b557600080fd5b506106be6110b7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561070c57600080fd5b506107156110dd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561076357600080fd5b506107c9600480360381019080806060019091929192908060a0019091929192908035906020019092919080359060200190929190803560ff16906020019092919080356000191690602001909291908035600019169060200190929190505050611103565b6040518082815260200191505060405180910390f35b3480156107eb57600080fd5b506107f4611acb565b6040518082815260200191505060405180910390f35b34801561081657600080fd5b5061081f611ad1565b6040518082815260200191505060405180910390f35b34801561084157600080fd5b50610876600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ad7565b005b34801561088457600080fd5b5061088d611d24565b6040518082815260200191505060405180910390f35b3480156108af57600080fd5b506108b8611d2a565b6040518082815260200191505060405180910390f35b3480156108da57600080fd5b506108e3611d30565b6040518082815260200191505060405180910390f35b34801561090557600080fd5b5061093a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d36565b005b34801561094857600080fd5b50610985600480360381019080806060019091929192908060a0019091929192908035906020019092919080359060200190929190505050611e8b565b6040518082815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a5481565b60158054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a5c5780601f10610a3157610100808354040283529160200191610a5c565b820191906000526020600020905b815481529060010190602001808311610a3f57829003601f168201915b505050505081565b610aa3828260006040519080825280601f01601f191660200182016040528015610a9d5781602001602082028038833980820191505090505b50610ac0565b5050565b60075481565b600c60009054906101000a900460ff1681565b610ac861210f565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b0157600080fd5b60166000846000191660001916815260200190815260200160002060009054906101000a900460ff161515610b3557600080fd5b8160159080519060200190610b4b929190613d88565b50610b5882600754612471565b600a819055507f3e19f2256bddc30aeab8054ccbd86723452d07f687b94441de69c05ee212dafa826040518080602001828103825283818151815260200191508051906020019080838360005b83811015610bc0578082015181840152602081019050610ba5565b50505050905090810190601f168015610bed5780820380516001836020036101000a031916815260200191505b509250505060405180910390a1610c02612765565b60166000846000191660001916815260200190815260200160002060006101000a81549060ff0219169055505050565b600c60019054906101000a900460ff1681565b620249f081565b6000610c6282600e61283590919063ffffffff16565b9050919050565b60138054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cff5780601f10610cd457610100808354040283529160200191610cff565b820191906000526020600020905b815481529060010190602001808311610ce257829003601f168201915b505050505081565b60148054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d9d5780601f10610d7257610100808354040283529160200191610d9d565b820191906000526020600020905b815481529060010190602001808311610d8057829003601f168201915b505050505081565b60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e3b5780601f10610e1057610100808354040283529160200191610e3b565b820191906000526020600020905b815481529060010190602001808311610e1e57829003601f168201915b505050505081565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610f1360138054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f055780601f10610eda57610100808354040283529160200191610f05565b820191906000526020600020905b815481529060010190602001808311610ee857829003601f168201915b5050505050620249f061288c565b9150813410151515610f2457600080fd5b61106660138054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fbd5780601f10610f9257610100808354040283529160200191610fbd565b820191906000526020600020905b815481529060010190602001808311610fa057829003601f168201915b505050505060148054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110585780601f1061102d57610100808354040283529160200191611058565b820191906000526020600020905b81548152906001019060200180831161103b57829003601f168201915b5050505050620249f0612c69565b9050600060010281600019161415151561107f57600080fd5b600160166000836000191660001916815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c60029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061110d613e08565b6000806000806000600c60019054906101000a900460ff16801561113e5750600c60009054906101000a900460ff16155b151561114957600080fd5b60008c1415801561115b575060008b14155b801561117657506111758b8d6131fc90919063ffffffff16565b5b151561118157600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfab472f30336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b15801561127257600080fd5b505af1158015611286573d6000803e3d6000fd5b505050506040513d602081101561129c57600080fd5b810190808051906020019092919050505015156112b857600080fd5b61132f8e600380602002604051908101604052809291908260036020028082843782019150505050508e600580602002604051908101604052809291908260056020028082843782019150505050508e3073ffffffffffffffffffffffffffffffffffffffff16613216909392919063ffffffff16565b9550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfab472f3088600001516040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b15801561142657600080fd5b505af115801561143a573d6000803e3d6000fd5b505050506040513d602081101561145057600080fd5b8101908080519060200190929190505050151561146c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16866020015173ffffffffffffffffffffffffffffffffffffffff1614806114da57503373ffffffffffffffffffffffffffffffffffffffff16866020015173ffffffffffffffffffffffffffffffffffffffff16145b15156114e557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16866000015173ffffffffffffffffffffffffffffffffffffffff161415801561155a5750856020015173ffffffffffffffffffffffffffffffffffffffff16866000015173ffffffffffffffffffffffffffffffffffffffff1614155b151561156557600080fd5b856000015173ffffffffffffffffffffffffffffffffffffffff1673__OrderLib______________________________638163681e90918861010001518d8d8d6040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200185600019166000191681526020018460ff1660ff168152602001836000191660001916815260200182600019166000191681526020019550505050505060206040518083038186803b15801561165b57600080fd5b505af415801561166f573d6000803e3d6000fd5b505050506040513d602081101561168557600080fd5b810190808051906020019092919050505015156116a157600080fd5b8560c00151421015156116fa5785610100015160001916600060018111156116c557fe5b7fe6104340582083fe7674a149f8da127b9d3d7f74a88ccd7610562eb5b61b919360405160405180910390a360009650611aba565b61171a61170b876101000151610c4c565b8d6133a890919063ffffffff16565b94506000851415611770578561010001516000191660018081111561173b57fe5b7fe6104340582083fe7674a149f8da127b9d3d7f74a88ccd7610562eb5b61b919360405160405180910390a360009650611aba565b61177a858c6133bf565b9650600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663eeaba0838760000151338a8a60a001516040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001945050505050600060405180830381600087803b15801561188557600080fd5b505af1158015611899573d6000803e3d6000fd5b505050506118b886610100015188600e6133e89092919063ffffffff16565b6000935060009250600073ffffffffffffffffffffffffffffffffffffffff16866040015173ffffffffffffffffffffffffffffffffffffffff16141515611a0d576119038761343e565b915061190e8761343e565b9050600086606001511115611990576119368282886060015161345c9092919063ffffffff16565b935061198f8660000151876040015186600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661347c909392919063ffffffff16565b5b600086608001511115611a0c576119b68282886080015161345c9092919063ffffffff16565b9250611a0b33876040015185600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661347c909392919063ffffffff16565b5b5b856040015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16876000015173ffffffffffffffffffffffffffffffffffffffff167f75cbdb818111666ee7e206d94dfeb2d679055e8bc6f34b6f5d30272edd4099908a88888c610100015160405180858152602001848152602001838152602001826000191660001916815260200194505050505060405180910390a48696505b505050505050979650505050505050565b60055481565b60095481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611b3257600080fd5b600c60019054906101000a900460ff16151515611b4e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611b8a57600080fd5b80600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503073ffffffffffffffffffffffffffffffffffffffff16600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637bb55cd26040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611c6857600080fd5b505af1158015611c7c573d6000803e3d6000fd5b505050506040513d6020811015611c9257600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16141515611cc557600080fd5b80600c60026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600c60016101000a81548160ff02191690831515021790555050565b60065481565b60085481565b600b5481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611d9157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611dcd57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f7f11fe0c7098e1a76afcc68f35abaa07ef156fa7d6dd2d39664812fe37348d1660405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000611e95613e08565b6000808414158015611eb65750611eb585856131fc90919063ffffffff16565b5b1515611ec157600080fd5b600c60009054906101000a900460ff16151515611edd57600080fd5b611f5487600380602002604051908101604052809291908260036020028082843782019150505050508760058060200260405190810160405280929190826005602002808284378201915050505050873073ffffffffffffffffffffffffffffffffffffffff16613216909392919063ffffffff16565b91503373ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff16141515611f9457600080fd5b8160c0015142101515611fed578161010001516000191660006001811115611fb857fe5b7fe6104340582083fe7674a149f8da127b9d3d7f74a88ccd7610562eb5b61b919360405160405180910390a360009250612105565b61200d611ffe836101000151610c4c565b866133a890919063ffffffff16565b90506000811415612063578161010001516000191660018081111561202e57fe5b7fe6104340582083fe7674a149f8da127b9d3d7f74a88ccd7610562eb5b61b919360405160405180910390a360009250612105565b61206d84826133bf565b925061208a82610100015184600e61359c9092919063ffffffff16565b81610100015160001916826040015173ffffffffffffffffffffffffffffffffffffffff16836000015173ffffffffffffffffffffffffffffffffffffffff167f7de4479e80e82e22edb1e0010433c8befc804c34988024fa0b0234715102cd8f866040518082815260200191505060405180910390a48292505b5050949350505050565b600080601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806121815750600061217f601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166135f2565b145b156121925761219060006135fd565b505b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561221857600080fd5b505af115801561222c573d6000803e3d6000fd5b505050506040513d602081101561224257600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156123ab57601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561232f57600080fd5b505af1158015612343573d6000803e3d6000fd5b505050506040513d602081101561235957600080fd5b8101908080519060200190929190505050601160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561243157600080fd5b505af1158015612445573d6000803e3d6000fd5b505050506040513d602081101561245b57600080fd5b8101908080519060200190929190505050905090565b6000606060008060008693506000925060009150600090505b83518110156127465760307f01000000000000000000000000000000000000000000000000000000000000000284828151811015156124c557fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916101580156125dd575060397f010000000000000000000000000000000000000000000000000000000000000002848281518110151561256d57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611155b1561268e5781156126005760008614156125f657612746565b8580600190039650505b600a830292506030848281518110151561261657fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f010000000000000000000000000000000000000000000000000000000000000090040383019250612739565b602e7f01000000000000000000000000000000000000000000000000000000000000000284828151811015156126c057fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561273857600191505b5b808060010191505061248a565b60008611156127585785600a0a830292505b8294505050505092915050565b6000600c60009054906101000a900460ff161561278157612832565b6009544211156127b0576001600c60006101000a81548160ff021916908315150217905550600a549050612812565b600554600a541015156127e2576001600c60006101000a81548160ff0219169083151502179055506005549050612811565b600654600a54111515612810576001600c60006101000a81548160ff02191690831515021790555060065490505b5b5b600c60009054906101000a900460ff1615612831576128308161360e565b5b5b50565b600061288483600101600084600019166000191681526020019081526020016000205484600001600085600019166000191681526020019081526020016000205461364f90919063ffffffff16565b905092915050565b600080601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806128fe575060006128fc601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166135f2565b145b1561290f5761290d60006135fd565b505b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561299557600080fd5b505af11580156129a9573d6000803e3d6000fd5b505050506040513d60208110156129bf57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515612b2857601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612aac57600080fd5b505af1158015612ac0573d6000803e3d6000fd5b505050506040513d6020811015612ad657600080fd5b8101908080519060200190929190505050601160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc84846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015612bd9578082015181840152602081019050612bbe565b50505050905090810190601f168015612c065780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015612c2657600080fd5b505af1158015612c3a573d6000803e3d6000fd5b505050506040513d6020811015612c5057600080fd5b8101908080519060200190929190505050905092915050565b6000806000601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480612cdd57506000612cdb601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166135f2565b145b15612cee57612cec60006135fd565b505b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612d7457600080fd5b505af1158015612d88573d6000803e3d6000fd5b505050506040513d6020811015612d9e57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515612f0757601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612e8b57600080fd5b505af1158015612e9f573d6000803e3d6000fd5b505050506040513d6020811015612eb557600080fd5b8101908080519060200190929190505050601160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015612fb8578082015181840152602081019050612f9d565b50505050905090810190601f168015612fe55780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b15801561300557600080fd5b505af1158015613019573d6000803e3d6000fd5b505050506040513d602081101561302f57600080fd5b81019080805190602001909291905050509050601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c51be90f8260008888886040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b838110156131015780820151818401526020810190506130e6565b50505050905090810190601f16801561312e5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b8381101561316757808201518184015260208101905061314c565b50505050905090810190601f1680156131945780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b1580156131b657600080fd5b505af11580156131ca573d6000803e3d6000fd5b50505050506040513d60208110156131e157600080fd5b81019080805190602001909291905050509150509392505050565b60008183148061320e57506000828402135b905092915050565b61321e613e08565b83600060038110151561322d57fe5b6020020151816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505083600160038110151561327857fe5b6020020151816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508360026003811015156132c357fe5b6020020151816040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505082600060058110151561330e57fe5b602002015181606001818152505082600160058110151561332b57fe5b602002015181608001818152505082600260058110151561334857fe5b60200201518160a001818152505082600360058110151561336557fe5b60200201518160c0018181525050818160e0018181525050613389858585856136b7565b8161010001906000191690816000191681525050809050949350505050565b60006133b7838360000361364f565b905092915050565b60006133ca8261343e565b6133d38461343e565b106133de57816133e0565b825b905092915050565b6134188184600001600085600019166000191681526020019081526020016000205461364f90919063ffffffff16565b836000016000846000191660001916815260200190815260200160002081905550505050565b60008082121561345357816000039050613457565b8190505b919050565b60008161346985856138a5565b81151561347257fe5b0490509392505050565b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd8484846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561355357600080fd5b505af1158015613567573d6000803e3d6000fd5b505050506040513d602081101561357d57600080fd5b8101908080519060200190929190505050151561359657fe5b50505050565b6135cc8184600101600085600019166000191681526020019081526020016000205461364f90919063ffffffff16565b836001016000846000191660001916815260200190815260200160002081905550505050565b6000813b9050919050565b60006136076138d8565b9050919050565b80600b819055507f68170b705528d3ff1d324cda28eb28cc3d11ce81207f157c05e11c18411a013c816040518082815260200191505060405180910390a150565b600080828401905061366184846131fc565b151561366f578091506136b0565b600084121515613695578360ff60019060020a021903831315151561369057fe5b6136ac565b8360ff60019060020a020383121515156136ab57fe5b5b8091505b5092915050565b6000848460006003811015156136c957fe5b60200201518560016003811015156136dd57fe5b60200201518660026003811015156136f157fe5b602002015186600060058110151561370557fe5b602002015187600160058110151561371957fe5b602002015188600260058110151561372d57fe5b602002015189600360058110151561374157fe5b60200201518a600460058110151561375557fe5b60200201518a604051808b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018781526020018681526020018581526020018481526020018381526020018281526020019a505050505050505050505060405180910390209050949350505050565b600080828402905060008414806138c657508284828115156138c357fe5b04145b15156138ce57fe5b8091505092915050565b6000806138f8731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6135f2565b111561399a57731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506139916040805190810160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250613d6e565b60019050613d6b565b60006139b973c03a2615d5efaf5f49f60b7bb6583eaec212fdf16135f2565b1115613a5b5773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613a526040805190810160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250613d6e565b60019050613d6b565b6000613a7a73b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6135f2565b1115613b1c5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613b136040805190810160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250613d6e565b60019050613d6b565b6000613b3b73146500cfd35b22e4a392fe0adc06de1a1368ed486135f2565b1115613bdd5773146500cfd35b22e4a392fe0adc06de1a1368ed48601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613bd46040805190810160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250613d6e565b60019050613d6b565b6000613bfc736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756135f2565b1115613c6057736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050613d6b565b6000613c7f7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6135f2565b1115613ce3577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050613d6b565b6000613d027351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6135f2565b1115613d66577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050613d6b565b600090505b90565b8060129080519060200190613d84929190613d88565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613dc957805160ff1916838001178555613df7565b82800160010185558215613df7579182015b82811115613df6578251825591602001919060010190613ddb565b5b509050613e049190613e9a565b5090565b61012060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160008152602001600080191681525090565b613ebc91905b80821115613eb8576000816000905550600101613ea0565b5090565b905600a165627a7a72305820b1c051d015fab18ca90102d5eed843e91ecd4587d355ba9cf73a0ce6d324d96c0029",
  "sourceMap":
    "875:5584:11:-;;;2249:5:3;2225:29;;;;;;;;;;;;;;;;;;;;2305:5;2260:50;;;;;;;;;;;;;;;;;;;;2498:1115:11;8:9:-1;5:2;;;30:1;27;20:12;5:2;2498:1115:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3402:24;2763:12;2785:14;2809:18;2837:16;2863:13;1017:10:0;1007:7;;:20;;;;;;;;;;;;;;;;;;4329:18:3;4309:17;;:38;;;;;;;;;;;;;;;;;;4381:18;4357:9;;:43;;;;;;;;;;;;;;;;;;4418:9;;;;;;;;;;;:48;;;4467:10;4418:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4418:60:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4418:60:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4418:60:3;;;;;;;;;;;;;;;;4410:69;;;;;;;;4536:13;4550:1;4536:16;;;;;;;;;;;;;4522:11;:30;;;;4574:13;4588:1;4574:16;;;;;;;;;;;;;4562:9;:28;;;;4620:11;;4608:9;;:23;4600:32;;;;;;;;4666:13;4680:1;4666:16;;;;;;;;;;;;;4643:20;:39;;;;4709:13;4723:1;4709:16;;;;;;;;;;;;;4692:14;:33;;;;4748:13;4762:1;4748:16;;;;;;;;;;;;;4735:10;:29;;;;4795:3;4782:10;;:16;4774:25;;;;;;;;4826:12;4810:13;:28;;;;;;;;;;;;:::i;:::-;;4869:16;4848:18;;:37;;;;;;;;;;;;;;;;;;4905:14;4895:7;;:24;;;;;;;;;;;;;;;;;;4108:818;;;;;2905:58:11;1928:4:15;2945:17:11;;1884:4:15;2923:19:11;;:39;2905:17;;;:58;;;:::i;:::-;3104:16;3083:18;:37;;;;;;;;;;;;:::i;:::-;;3145:11;3130:12;:26;;;;;;;;;;;;:::i;:::-;;3187:3;3174:10;;:16;3166:25;;;;;;;;3429:17;3402:44;;3484:19;3477:3;3464:10;;:16;:39;;3456:48;;;;;;;;3514:13;:11;;;:13;;;:::i;:::-;2498:1115;;;;;;;;875:5584;;6602:114:15;2254:1;2248:3;;;;;;;;;;;2240:15;;;2239:49;;;;2286:1;2259:25;2279:3;;;;;;;;;;;2259:11;;;:25;;;:::i;:::-;:28;2239:49;2236:101;;;2302:35;1970:1;2302:19;;;:35;;;:::i;:::-;;2236:101;2372:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2372:16:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2372:16:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2372:16:15;;;;;;;;;;;;;;;;2351:37;;2359:8;;;;;;;;;;;2351:37;;;;2348:92;;;2423:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2423:16:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2423:16:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2423:16:15;;;;;;;;;;;;;;;;2402:8;;:38;;;;;;;;;;;;;;;;;;2348:92;6680:8;;;;;;;;;;;:21;;;6702:6;6680:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6680:29:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6680:29:15;;;;6602:114;:::o;5525:932:11:-;6224:15;6242:138;6270:10;;6294:18;6242:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6326:12;6242:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1104:6;6242:14;;;:138;;;:::i;:::-;6224:156;;6409:1;6398:12;;:7;:12;;;;;6390:21;;;;;;;;6446:4;6421:13;:22;6435:7;6421:22;;;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;5525:932;:::o;6858:150:15:-;6920:10;6986:5;6974:18;6965:27;;6951:51;;;:::o;2564:183::-;2627:4;2647:21;:19;;;:21;;;:::i;:::-;2640:28;;2564:183;;;:::o;5732:383::-;5848:10;5869;2254:1;2248:3;;;;;;;;;;;2240:15;;;2239:49;;;;2286:1;2259:25;2279:3;;;;;;;;;;;2259:11;;;:25;;;:::i;:::-;:28;2239:49;2236:101;;;2302:35;1970:1;2302:19;;;:35;;;:::i;:::-;;2236:101;2372:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2372:16:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2372:16:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2372:16:15;;;;;;;;;;;;;;;;2351:37;;2359:8;;;;;;;;;;;2351:37;;;;2348:92;;;2423:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2423:16:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2423:16:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2423:16:15;;;;;;;;;;;;;;;;2402:8;;:38;;;;;;;;;;;;;;;;;;2348:92;5882:8;;;;;;;;;;;:17;;;5900:10;5912:8;5882:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5882:39:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5882:39:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5882:39:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5882:39:15;;;;;;;;;;;;;;;;5869:52;;6030:8;;;;;;;;;;;:27;;;6064:5;6071:9;6082:10;6094:3;6099:8;6030:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6030:78:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6030:78:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6030:78:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6030:78:15;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6030:78:15;;;;;;;;;;;;;;;;6023:85;;5732:383;;;;;;;:::o;2752:1749::-;2800:4;2875:1;2819:55;2831:42;2819:11;;;:55;;;:::i;:::-;:57;2815:245;;;2929:42;2901:3;;:71;;;;;;;;;;;;;;;;;;2986:38;;;;;;;;;;;;;;;;;;;:23;;;:38;;;:::i;:::-;3045:4;3038:11;;;;2815:245;3129:1;3073:55;3085:42;3073:11;;;:55;;;:::i;:::-;:57;3069:254;;;3191:42;3163:3;;:71;;;;;;;;;;;;;;;;;;3248:39;;;;;;;;;;;;;;;;;;;:23;;;:39;;;:::i;:::-;3308:4;3301:11;;;;3069:254;3392:1;3336:55;3348:42;3336:11;;;:55;;;:::i;:::-;:57;3332:249;;;3452:42;3424:3;;:71;;;;;;;;;;;;;;;;;;3509:36;;;;;;;;;;;;;;;;;;;:23;;;:36;;;:::i;:::-;3566:4;3559:11;;;;3332:249;3650:1;3594:55;3606:42;3594:11;;;:55;;;:::i;:::-;:57;3590:253;;;3712:42;3684:3;;:71;;;;;;;;;;;;;;;;;;3769:38;;;;;;;;;;;;;;;;;;;:23;;;:38;;;:::i;:::-;3828:4;3821:11;;;;3590:253;3912:1;3856:55;3868:42;3856:11;;;:55;;;:::i;:::-;:57;3852:201;;;3974:42;3946:3;;:71;;;;;;;;;;;;;;;;;;4038:4;4031:11;;;;3852:201;4122:1;4066:55;4078:42;4066:11;;;:55;;;:::i;:::-;:57;4062:200;;;4183:42;4155:3;;:71;;;;;;;;;;;;;;;;;;4247:4;4240:11;;;;4062:200;4331:1;4275:55;4287:42;4275:11;;;:55;;;:::i;:::-;:57;4271:202;;;4394:42;4366:3;;:71;;;;;;;;;;;;;;;;;;4458:4;4451:11;;;;4271:202;4489:5;4482:12;;2752:1749;;:::o;7645:118::-;7743:13;7719:21;:37;;;;;;;;;;;;:::i;:::-;;7645:118;:::o;875:5584:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap":
    "875:5584:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:22:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;947:22:0;;;;;;;;;;;;;;;;;;;;;;;;;;;2165:21:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2165:21:3;;;;;;;;;;;;;;;;;;;;;;;1251:34:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1251:34:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1251:34:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4507:111:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4507:111:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:32:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1876:32:3;;;;;;;;;;;;;;;;;;;;;;;2225:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2225:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;4882:528:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4882:528:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2260:50:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2260:50:3;;;;;;;;;;;;;;;;;;;;;;;;;;;1062:48:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1062:48:11;;;;;;;;;;;;;;;;;;;;;;;12281:168:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12281:168:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;992:32:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;992:32:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;992:32:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1030:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1030:26:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1030:26:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1748:27:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1748:27:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1748:27:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1781:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1781:33:3;;;;;;;;;;;;;;;;;;;;;;;;;;;4003:599:11;;;;;;1682:32:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1682:32:3;;;;;;;;;;;;;;;;;;;;;;;;;;;2335:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2335:42:3;;;;;;;;;;;;;;;;;;;;;;;;;;;5450:2962;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5450:2962:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1820:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1820:21:3;;;;;;;;;;;;;;;;;;;;;;;2113:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2113:22:3;;;;;;;;;;;;;;;;;;;;;;;10529:537;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10529:537:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;1847:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1847:23:3;;;;;;;;;;;;;;;;;;;;;;;1988:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1988:26:3;;;;;;;;;;;;;;;;;;;;;;;2192:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2192:27:3;;;;;;;;;;;;;;;;;;;;;;;1131:198:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1131:198:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;8883:1354:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8883:1354:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:22:0;;;;;;;;;;;;;:::o;2165:21:3:-;;;;:::o;1251:34:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4507:111:15:-;4573:38;4584:4;4590:6;4608:1;4598:12;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;4598:12:15;;;;4573:10;:38::i;:::-;4507:111;;:::o;1876:32:3:-;;;;:::o;2225:29::-;;;;;;;;;;;;;:::o;4882:528:11:-;4986:20;:18;:20::i;:::-;4972:34;;:10;:34;;;4964:43;;;;;;;;5025:13;:22;5039:7;5025:22;;;;;;;;;;;;;;;;;;;;;;;;;;;5017:31;;;;;;;;5120:6;5097:20;:29;;;;;;;;;;;;:::i;:::-;;5148:38;5157:6;5165:20;;5148:8;:38::i;:::-;5136:9;:50;;;;5201:24;5218:6;5201:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5201:24:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5235:17;:15;:17::i;:::-;5336:13;:22;5350:7;5336:22;;;;;;;;;;;;;;;;;;5329:29;;;;;;;;;;;4882:528;;;:::o;2260:50:3:-;;;;;;;;;;;;;:::o;1062:48:11:-;1104:6;1062:48;:::o;12281:168:3:-;12363:3;12385:57;12432:9;12385:13;:46;;:57;;;;:::i;:::-;12378:64;;12281:168;;;:::o;992:32:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1030:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1748:27:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1781:33::-;;;;;;;;;;;;;:::o;4003:599:11:-;4064:9;4393:15;4076:57;4094:18;4076:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1104:6;4076:17;:57::i;:::-;4064:69;;4164:4;4151:9;:17;;4143:26;;;;;;;;4411:114;4439:18;4411:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4471:12;4411:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1104:6;4411:14;:114::i;:::-;4393:132;;4554:1;4543:12;;:7;:12;;;;;4535:21;;;;;;;;4591:4;4566:13;:22;4580:7;4566:22;;;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;4003:599;;:::o;1682:32:3:-;;;;;;;;;;;;;:::o;2335:42::-;;;;;;;;;;;;;:::o;5450:2962::-;5666:13;5976:27;;:::i;:::-;6713:16;7271:17;7302;7439;7488:16;5703:30;;;;;;;;;;;:44;;;;;5738:9;;;;;;;;;;;5737:10;5703:44;5695:53;;;;;;;;5808:1;5796:8;:13;;:31;;;;;5826:1;5813:9;:14;;5796:31;:65;;;;;5831:30;5851:9;5831:8;:19;;:30;;;;:::i;:::-;5796:65;5788:74;;;;;;;;5913:9;;;;;;;;;;;:34;;;5948:4;5954:10;5913:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5913:52:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5913:52:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5913:52:3;;;;;;;;;;;;;;;;5905:61;;;;;;;;6006:72;6032:14;6006:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6048:19;6006:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6069:8;6014:4;6006:25;;;;:72;;;;;;:::i;:::-;5976:102;;6096:9;;;;;;;;;;;:34;;;6131:4;6137:5;:11;;;6096:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6096:53:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6096:53:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6096:53:3;;;;;;;;;;;;;;;;6088:62;;;;;;;;6252:1;6229:25;;:5;:11;;;:25;;;:54;;;;6273:10;6258:25;;:5;:11;;;:25;;;6229:54;6221:63;;;;;;;;6360:1;6337:25;;:5;:11;;;:25;;;;:55;;;;;6381:5;:11;;;6366:26;;:5;:11;;;:26;;;;6337:55;6329:64;;;;;;;;6424:5;:11;;;:28;;;;;;6470:5;:15;;;6503:1;6522;6541;6424:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6424:128:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6424:128:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6424:128:3;;;;;;;;;;;;;;;;6403:150;;;;;;;;6576:5;:25;;;6569:3;:32;;6565:138;;;6654:5;:15;;;6622:48;;;6628:24;6622:48;;;;;;;;;;;;;;;;;;6691:1;6684:8;;;;6565:138;6732:68;6750:49;6783:5;:15;;;6750:32;:49::i;:::-;6732:8;:17;;:68;;;;:::i;:::-;6713:87;;6830:1;6814:12;:17;6810:165;;;6926:5;:15;;;6897:45;;;6903:21;6897:45;;;;;;;;;;;;;;;;;;6963:1;6956:8;;;;6810:165;6997:39;7012:12;7026:9;6997:14;:39::i;:::-;6985:51;;7046:20;;;;;;;;;;;:36;;;7096:5;:11;;;7121:10;7145:9;7168:5;:11;;;7046:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7046:143:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7046:143:3;;;;7199:61;7233:5;:15;;;7250:9;7199:13;:33;;:61;;;;;:::i;:::-;7291:1;7271:21;;7322:1;7302:21;;7368:1;7338:32;;:5;:18;;;:32;;;;7334:823;;;7459:15;:9;:13;:15::i;:::-;7439:35;;7507:15;:9;:13;:15::i;:::-;7488:34;;7557:1;7540:5;:14;;;:18;7536:299;;;7593:58;7625:12;7639:11;7593:5;:14;;;:31;;:58;;;;;:::i;:::-;7578:73;;7669:151;7717:5;:11;;;7750:5;:18;;;7790:12;7669:9;;;;;;;;;;;:26;;;;:151;;;;;;:::i;:::-;7536:299;7870:1;7853:5;:14;;;:18;7849:298;;;7906:58;7938:12;7952:11;7906:5;:14;;;:31;;:58;;;;;:::i;:::-;7891:73;;7982:150;8030:10;8062:5;:18;;;8102:12;7982:9;;;;;;;;;;;:26;;;;:150;;;;;;:::i;:::-;7849:298;7334:823;8246:5;:18;;;8172:206;;8222:10;8172:206;;8197:5;:11;;;8172:206;;;8278:9;8301:12;8327;8353:5;:15;;;8172:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8396:9;8389:16;;5450:2962;;;;;;;;;;;;;;;;:::o;1820:21::-;;;;:::o;2113:22::-;;;;:::o;10529:537::-;1390:7:0;;;;;;;;;;;1376:21;;:10;:21;;;1368:30;;;;;;;;10632::3;;;;;;;;;;;10631:31;10623:40;;;;;;;;10743:1;10720:25;;:11;:25;;;;10712:34;;;;;;;;10844:11;10800:20;;:56;;;;;;;;;;;;;;;;;;10922:4;10874:53;;:20;;;;;;;;;;;:34;;;:36;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10874:36:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10874:36:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10874:36:3;;;;;;;;;;;;;;;;:53;;;10866:62;;;;;;;;11001:11;10971:27;;:41;;;;;;;;;;;;;;;;;;11055:4;11022:30;;:37;;;;;;;;;;;;;;;;;;10529:537;:::o;1847:23::-;;;;:::o;1988:26::-;;;;:::o;2192:27::-;;;;:::o;1131:198:0:-;1390:7;;;;;;;;;;;1376:21;;:10;:21;;;1368:30;;;;;;;;1235:1;1213:24;;:10;:24;;;;1205:33;;;;;;;;1281:10;1253:39;;1272:7;;;;;;;;;;;1253:39;;;;;;;;;;;;1312:10;1302:7;;:20;;;;;;;;;;;;;;;;;;1131:198;:::o;8883:1354:3:-;9047:16;9224:27;;:::i;:::-;9599:16;9102:1;9087:11;:16;;:52;;;;;9107:32;9130:8;9107:11;:22;;:32;;;;:::i;:::-;9087:52;9079:61;;;;;;;;9204:9;;;;;;;;;;;9203:10;9195:19;;;;;;;;9254:72;9280:14;9254:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9296:19;9254:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9317:8;9262:4;9254:25;;;;:72;;;;;;:::i;:::-;9224:102;;9359:10;9344:25;;:5;:11;;;:25;;;9336:34;;;;;;;;9462:5;:25;;;9455:3;:32;;9451:138;;;9540:5;:15;;;9508:48;;;9514:24;9508:48;;;;;;;;;;;;;;;;;;9577:1;9570:8;;;;9451:138;9618:68;9636:49;9669:5;:15;;;9636:32;:49::i;:::-;9618:8;:17;;:68;;;;:::i;:::-;9599:87;;9716:1;9700:12;:17;9696:173;;;9820:5;:15;;;9791:45;;;9797:21;9791:45;;;;;;;;;;;;;;;;;;9857:1;9850:8;;;;9696:173;9894:41;9909:11;9922:12;9894:14;:41::i;:::-;9879:56;;9982:67;10019:5;:15;;;10036:12;9982:13;:36;;:67;;;;;:::i;:::-;10175:5;:15;;;10064:136;;;10117:5;:18;;;10064:136;;10092:5;:11;;;10064:136;;;10149:12;10064:136;;;;;;;;;;;;;;;;;;10218:12;10211:19;;8883:1354;;;;;;;;;:::o;6485:112:15:-;6545:7;2254:1;2248:3;;;;;;;;;;;2240:15;;;2239:49;;;;2286:1;2259:25;2279:3;;;;;;;;;;;2259:11;:25::i;:::-;:28;2239:49;2236:101;;;2302:35;1970:1;2302:19;:35::i;:::-;;2236:101;2372:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2372:16:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2372:16:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2372:16:15;;;;;;;;;;;;;;;;2351:37;;2359:8;;;;;;;;;;;2351:37;;;;2348:92;;;2423:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2423:16:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2423:16:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2423:16:15;;;;;;;;;;;;;;;;2402:8;;:38;;;;;;;;;;;;;;;;;;2348:92;6570:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6570:20:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6570:20:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6570:20:15;;;;;;;;;;;;;;;;6563:27;;6485:112;:::o;7013:593::-;7074:4;7090:20;7132:9;7155:13;7191:6;7119:2;7090:32;;7144:1;7132:13;;7171:5;7155:21;;7198:1;7191:8;;7186:357;7203:7;:14;7201:1;:16;7186:357;;;7256:2;7242:16;;:7;7250:1;7242:10;;;;;;;;;;;;;;;;;;;;:16;;;;;7241:38;;;;;7276:2;7262:16;;:7;7270:1;7262:10;;;;;;;;;;;;;;;;;;;;:16;;;;;7241:38;7237:295;;;7302:8;7298:102;;;7342:1;7336:2;:7;7332:49;;;7345:5;;7332:49;7377:4;;;;;;;;7298:102;7425:2;7417:10;;;;7472:2;7458:7;7466:1;7458:10;;;;;;;;;;;;;;;;;;;;7453:16;;;:21;7445:29;;;;7237:295;;;7513:2;7499:16;;:7;7507:1;7499:10;;;;;;;;;;;;;;;;;;;;:16;;;;7495:37;;;7528:4;7517:15;;7495:37;7237:295;7219:3;;;;;;;7186:357;;;7561:1;7556:2;:6;7552:26;;;7576:2;7572;:6;7564:14;;;;7552:26;7595:4;7588:11;;7013:593;;;;;;;;:::o;12666:851:3:-;12778:23;12716:9;;;;;;;;;;;12712:56;;;12761:7;;12712:56;12821:10;;12815:3;:16;12811:616;;;12940:4;12928:9;;:16;;;;;;;;;;;;;;;;;;13036:9;;13015:30;;12811:616;;;13079:9;;13066;;:22;;13062:365;;;13180:4;13168:9;;:16;;;;;;;;;;;;;;;;;;13219:9;;13198:30;;13062:365;;;13262:11;;13249:9;;:24;;13245:182;;;13366:4;13354:9;;:16;;;;;;;;;;;;;;;;;;13405:11;;13384:32;;13245:182;13062:365;12811:616;13441:9;;;;;;;;;;;13437:74;;;13466:34;13481:18;13466:14;:34::i;:::-;13437:74;12666:851;;:::o;1449:236:8:-;1583:3;1609:69;1644:4;:22;;:33;1667:9;1644:33;;;;;;;;;;;;;;;;;;1609:4;:19;;:30;1629:9;1609:30;;;;;;;;;;;;;;;;;;:34;;:69;;;;:::i;:::-;1602:76;;1449:236;;;;:::o;4915:159:15:-;5006:4;2254:1;2248:3;;;;;;;;;;;2240:15;;;2239:49;;;;2286:1;2259:25;2279:3;;;;;;;;;;;2259:11;:25::i;:::-;:28;2239:49;2236:101;;;2302:35;1970:1;2302:19;:35::i;:::-;;2236:101;2372:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2372:16:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2372:16:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2372:16:15;;;;;;;;;;;;;;;;2351:37;;2359:8;;;;;;;;;;;2351:37;;;;2348:92;;;2423:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2423:16:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2423:16:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2423:16:15;;;;;;;;;;;;;;;;2402:8;;:38;;;;;;;;;;;;;;;;;;2348:92;5028:8;;;;;;;;;;;:17;;;5046:10;5058:8;5028:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5028:39:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5028:39:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5028:39:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5028:39:15;;;;;;;;;;;;;;;;5021:46;;4915:159;;;;:::o;6120:359::-;6220:10;6241;2254:1;2248:3;;;;;;;;;;;2240:15;;;2239:49;;;;2286:1;2259:25;2279:3;;;;;;;;;;;2259:11;:25::i;:::-;:28;2239:49;2236:101;;;2302:35;1970:1;2302:19;:35::i;:::-;;2236:101;2372:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2372:16:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2372:16:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2372:16:15;;;;;;;;;;;;;;;;2351:37;;2359:8;;;;;;;;;;;2351:37;;;;2348:92;;;2423:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2423:16:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2423:16:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2423:16:15;;;;;;;;;;;;;;;;2402:8;;:38;;;;;;;;;;;;;;;;;;2348:92;6254:8;;;;;;;;;;;:17;;;6272:10;6284:8;6254:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6254:39:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6254:39:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6254:39:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6254:39:15;;;;;;;;;;;;;;;;6241:52;;6402:8;;;;;;;;;;;:27;;;6436:5;6443:1;6446:10;6458:3;6463:8;6402:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6402:70:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6402:70:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6402:70:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6402:70:15;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6402:70:15;;;;;;;;;;;;;;;;6395:77;;6120:359;;;;;;:::o;2916:109:7:-;2973:4;3003:1;2998;:6;:19;;;;3016:1;3012;3008;:5;:9;2998:19;2989:29;;2916:109;;;;:::o;3742:752:8:-;3919:11;;:::i;:::-;3960:14;3975:1;3960:17;;;;;;;;;;;;;3946:5;:11;;:31;;;;;;;;;;;4001:14;4016:1;4001:17;;;;;;;;;;;;;3987:5;:11;;:31;;;;;;;;;;;4049:14;4064:1;4049:17;;;;;;;;;;;;;4028:5;:18;;:38;;;;;;;;;;;4093:19;4113:1;4093:22;;;;;;;;;;;;;4076:5;:14;;:39;;;;;4142:19;4162:1;4142:22;;;;;;;;;;;;;4125:5;:14;;:39;;;;;4188:19;4208:1;4188:22;;;;;;;;;;;;;4174:5;:11;;:36;;;;;4248:19;4268:1;4248:22;;;;;;;;;;;;;4220:5;:25;;:50;;;;;4292:8;4280:5;:9;;:20;;;;;4328:137;4357:15;4386:14;4414:19;4447:8;4328:15;:137::i;:::-;4310:5;:15;;:155;;;;;;;;;;;;;4482:5;4475:12;;3742:752;;;;;;:::o;2354:122:7:-;2415:6;2440:10;2444:1;2448;2447:2;;2440:3;:10::i;:::-;2433:17;;2354:122;;;;:::o;3537:115::-;3596:6;3630;3634:1;3630:3;:6::i;:::-;3621;3625:1;3621:3;:6::i;:::-;:15;:24;;3644:1;3621:24;;;3640:1;3621:24;3614:31;;3537:115;;;;:::o;4700:195:8:-;4843:45;4878:9;4843:4;:19;;:30;4863:9;4843:30;;;;;;;;;;;;;;;;;;:34;;:45;;;;:::i;:::-;4810:4;:19;;:30;4830:9;4810:30;;;;;;;;;;;;;;;;;:78;;;;4700:195;;;:::o;3139:167:7:-;3185:7;3212:1;3208;:5;3204:96;;;3242:1;3241:2;;3229:15;;;;3204:96;3287:1;3275:14;;3139:167;;;;:::o;1037:203::-;1167:7;1222:11;1197:22;1206:1;1209:9;1197:8;:22::i;:::-;:36;;;;;;;;1190:43;;1037:203;;;;;:::o;492:169:27:-;620:5;:18;;;639:4;645:2;649:5;620:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;620:35:27;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;620:35:27;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;620:35:27;;;;;;;;;;;;;;;;613:43;;;;;;492:169;;;;:::o;5089:210:8:-;5241:51;5279:12;5241:4;:22;;:33;5264:9;5241:33;;;;;;;;;;;;;;;;;;:37;;:51;;;;:::i;:::-;5205:4;:22;;:33;5228:9;5205:33;;;;;;;;;;;;;;;;;:87;;;;5089:210;;;:::o;6858:150:15:-;6920:10;6986:5;6974:18;6965:27;;6951:51;;;:::o;2564:183::-;2627:4;2647:21;:19;:21::i;:::-;2640:28;;2564:183;;;:::o;13672:166:3:-;13759:20;13741:15;:38;;;;13794:37;13810:20;13794:37;;;;;;;;;;;;;;;;;;13672:166;:::o;1673:509:7:-;1729:6;1747:8;1762:1;1758;:5;1747:16;;1778;1789:1;1792;1778:10;:16::i;:::-;1777:17;1773:126;;;1887:1;1880:8;;;;1773:126;1918:1;1913;:6;;1909:249;;;2022:1;856:3;850:1;842:17;;;;839:22;2009:14;2004:1;:19;;1997:27;;;;;;1909:249;;;2145:1;792:3;786:1;778:17;;;;2132:14;2127:1;:19;;2120:27;;;;;;1909:249;2174:1;2167:8;;1673:509;;;;;;:::o;2115:559:8:-;2294:7;2347:15;2376:14;2391:1;2376:17;;;;;;;;;;;;;2407:14;2422:1;2407:17;;;;;;;;;;;;;2438:14;2453:1;2438:17;;;;;;;;;;;;;2469:19;2489:1;2469:22;;;;;;;;;;;;;2505:19;2525:1;2505:22;;;;;;;;;;;;;2541:19;2561:1;2541:22;;;;;;;;;;;;;2577:19;2597:1;2577:22;;;;;;;;;;;;;2613:19;2633:1;2613:22;;;;;;;;;;;;;2649:8;2324:343;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2317:350;;2115:559;;;;;;:::o;869:162:7:-;932:7;951:9;967:1;963;:5;951:17;;990:1;985;:6;:20;;;;1004:1;999;995;:5;;;;;;;;:10;985:20;978:28;;;;;;1023:1;1016:8;;869:162;;;;;:::o;2752:1749:15:-;2800:4;2875:1;2819:55;2831:42;2819:11;:55::i;:::-;:57;2815:245;;;2929:42;2901:3;;:71;;;;;;;;;;;;;;;;;;2986:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;3045:4;3038:11;;;;2815:245;3129:1;3073:55;3085:42;3073:11;:55::i;:::-;:57;3069:254;;;3191:42;3163:3;;:71;;;;;;;;;;;;;;;;;;3248:39;;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;3308:4;3301:11;;;;3069:254;3392:1;3336:55;3348:42;3336:11;:55::i;:::-;:57;3332:249;;;3452:42;3424:3;;:71;;;;;;;;;;;;;;;;;;3509:36;;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;3566:4;3559:11;;;;3332:249;3650:1;3594:55;3606:42;3594:11;:55::i;:::-;:57;3590:253;;;3712:42;3684:3;;:71;;;;;;;;;;;;;;;;;;3769:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;3828:4;3821:11;;;;3590:253;3912:1;3856:55;3868:42;3856:11;:55::i;:::-;:57;3852:201;;;3974:42;3946:3;;:71;;;;;;;;;;;;;;;;;;4038:4;4031:11;;;;3852:201;4122:1;4066:55;4078:42;4066:11;:55::i;:::-;:57;4062:200;;;4183:42;4155:3;;:71;;;;;;;;;;;;;;;;;;4247:4;4240:11;;;;4062:200;4331:1;4275:55;4287:42;4275:11;:55::i;:::-;:57;4271:202;;;4394:42;4366:3;;:71;;;;;;;;;;;;;;;;;;4458:4;4451:11;;;;4271:202;4489:5;4482:12;;2752:1749;;:::o;7645:118::-;7743:13;7719:21;:37;;;;;;;;;;;;:::i;:::-;;7645:118;:::o;875:5584:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source":
    "/*\n    Copyright 2017-2018 Phillip A. Elsasser\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\npragma solidity ^0.4.23;\n\nimport \"./oraclizeAPI.sol\";\nimport \"../libraries/MathLib.sol\";\nimport \"../MarketContract.sol\";\n\n\n/// @title MarketContract first example of a MarketProtocol contract using Oraclize services\n/// @author Phil Elsasser <phil@marketprotocol.io>\ncontract MarketContractOraclize is MarketContract, usingOraclize {\n    using MathLib for uint;\n\n    // constants\n    string public ORACLE_DATA_SOURCE;\n    string public ORACLE_QUERY;\n    uint constant public QUERY_CALLBACK_GAS = 150000;\n    //uint constant public QUERY_CALLBACK_GAS_PRICE = 20000000000 wei; // 20 gwei - need to make this dynamic!\n\n    // state variables\n    string public lastPriceQueryResult;\n    mapping(bytes32 => bool) validQueryIDs;\n\n    /// @param contractName viewable name of this contract (BTC/ETH, LTC/ETH, etc)\n    /// @param creatorAddress address of the person creating the contract\n    /// @param marketTokenAddress address of our member token\n    /// @param baseTokenAddress address of the ERC20 token that will be used for collateral and pricing\n    /// @param contractSpecs array of unsigned integers including:\n    /// floorPrice minimum tradeable price of this contract, contract enters settlement if breached\n    /// capPrice maximum tradeable price of this contract, contract enters settlement if breached\n    /// priceDecimalPlaces number of decimal places to convert our queried price from a floating point to\n    /// an integer\n    /// qtyMultiplier multiply traded qty by this value from base units of collateral token.\n    /// expirationTimeStamp - seconds from epoch that this contract expires and enters settlement\n    /// @param oracleDataSource a data-source such as \"URL\", \"WolframAlpha\", \"IPFS\"\n    /// see http://docs.oraclize.it/#ethereum-quick-start-simple-query\n    /// @param oracleQuery see http://docs.oraclize.it/#ethereum-quick-start-simple-query for examples\n    constructor(\n        string contractName,\n        address creatorAddress,\n        address marketTokenAddress,\n        address baseTokenAddress,\n        uint[5] contractSpecs,\n        string oracleDataSource,\n        string oracleQuery\n    ) MarketContract(\n        contractName,\n        creatorAddress,\n        marketTokenAddress,\n        baseTokenAddress,\n        contractSpecs\n    )  public\n    {\n        oraclize_setProof(proofType_TLSNotary | proofStorage_IPFS);\n        //oraclize_setCustomGasPrice(QUERY_CALLBACK_GAS_PRICE);  //TODO: allow this to be changed by creator.\n        ORACLE_DATA_SOURCE = oracleDataSource;\n        ORACLE_QUERY = oracleQuery;\n        require(EXPIRATION > now);         // Require expiration time in the future.\n\n        // Future timestamp must be within 60 days from now.\n        // https://docs.oraclize.it/#ethereum-quick-start-schedule-a-query-in-the-future\n        uint secondsPerSixtyDays = 60 * 60 * 24 * 60;\n        require(EXPIRATION - now <= secondsPerSixtyDays);\n        queryOracle();                      // Schedule a call to oracle at contract expiration time.\n    }\n\n    /// @notice allows a user to request an extra query to oracle in order to push the contract into\n    /// settlement.  A user may call this as many times as they like, since they are the ones paying for\n    /// the call to our oracle and post processing. This is useful for both a failsafe and as a way to\n    /// settle a contract early if a price cap or floor has been breached.\n    function requestEarlySettlement() external payable {\n        uint cost = oraclize_getPrice(ORACLE_DATA_SOURCE, QUERY_CALLBACK_GAS);\n        require(msg.value >= cost); // user must pay enough to cover query and callback\n        // create immediate query, we must make sure to store this one separately, so\n        // we do not schedule recursive callbacks when the query completes.\n        bytes32 queryId = oraclize_query(\n            ORACLE_DATA_SOURCE,\n            ORACLE_QUERY,\n            QUERY_CALLBACK_GAS\n        );\n        require(queryId != 0);\n        validQueryIDs[queryId] = true;\n    }\n\n    /*\n    // PUBLIC METHODS\n    */\n\n    /// @notice only public for callbacks from oraclize, do not call\n    /// @param queryID of the returning query, this should match our own internal mapping\n    /// @param result query to be processed\n    /// @param proof result proof\n    function __callback(bytes32 queryID, string result, bytes proof) public {\n        require(msg.sender == oraclize_cbAddress());\n        require(validQueryIDs[queryID]);  // At expiration or early settlement.\n        lastPriceQueryResult = result;\n        lastPrice = parseInt(result, PRICE_DECIMAL_PLACES);\n        emit UpdatedLastPrice(result);\n        checkSettlement();  // Verify settlement at expiration or requested early settlement.\n        delete validQueryIDs[queryID];\n        proof;  // silence compiler warnings\n    }\n\n    /*\n    // PRIVATE METHODS\n    */\n\n    /// @dev call to oraclize to set up our query and record its hash.\n    function queryOracle() private {\n        // Require that sufficient funds are available to pay for the query.\n        // require(oraclize_getPrice(ORACLE_DATA_SOURCE, QUERY_CALLBACK_GAS) < this.balance);\n        // NOTE: Currently the first oracle query call to oraclize.it is free. Since our\n        // expiration query will always be the first, there is no needed pre-funding amount\n        // to create this query.  When we go to the centralized query hub - this will change\n        // due to the fact that the address creating the query will always be the query hub.\n        // will have to do the analysis to see which is cheaper, free queries, or lower deployment\n        // gas costs\n        bytes32 queryId = oraclize_query(\n            EXPIRATION,\n            ORACLE_DATA_SOURCE,\n            ORACLE_QUERY,\n            QUERY_CALLBACK_GAS\n        );\n        require(queryId != 0);\n        validQueryIDs[queryId] = true;\n    }\n}",
  "sourcePath":
    "/home/pelsasser/MARKETProtocol/contracts/oraclize/MarketContractOraclize.sol",
  "ast": {
    "absolutePath":
      "/home/pelsasser/MARKETProtocol/contracts/oraclize/MarketContractOraclize.sol",
    "exportedSymbols": {
      "MarketContractOraclize": [2806]
    },
    "id": 2807,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2602,
        "literals": ["solidity", "^", "0.4", ".23"],
        "nodeType": "PragmaDirective",
        "src": "608:24:11"
      },
      {
        "absolutePath":
          "/home/pelsasser/MARKETProtocol/contracts/oraclize/oraclizeAPI.sol",
        "file": "./oraclizeAPI.sol",
        "id": 2603,
        "nodeType": "ImportDirective",
        "scope": 2807,
        "sourceUnit": 3753,
        "src": "634:27:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath":
          "/home/pelsasser/MARKETProtocol/contracts/libraries/MathLib.sol",
        "file": "../libraries/MathLib.sol",
        "id": 2604,
        "nodeType": "ImportDirective",
        "scope": 2807,
        "sourceUnit": 2084,
        "src": "662:34:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath":
          "/home/pelsasser/MARKETProtocol/contracts/MarketContract.sol",
        "file": "../MarketContract.sol",
        "id": 2605,
        "nodeType": "ImportDirective",
        "scope": 2807,
        "sourceUnit": 1456,
        "src": "697:31:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2606,
              "name": "MarketContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1455,
              "src": "910:14:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MarketContract_$1455",
                "typeString": "contract MarketContract"
              }
            },
            "id": 2607,
            "nodeType": "InheritanceSpecifier",
            "src": "910:14:11"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2608,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3752,
              "src": "926:13:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$3752",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 2609,
            "nodeType": "InheritanceSpecifier",
            "src": "926:13:11"
          }
        ],
        "contractDependencies": [55, 1455, 3752],
        "contractKind": "contract",
        "documentation":
          "@title MarketContract first example of a MarketProtocol contract using Oraclize services\n @author Phil Elsasser <phil@marketprotocol.io>",
        "fullyImplemented": true,
        "id": 2806,
        "linearizedBaseContracts": [2806, 3752, 1455, 55],
        "name": "MarketContractOraclize",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2612,
            "libraryName": {
              "contractScope": null,
              "id": 2610,
              "name": "MathLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2083,
              "src": "952:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MathLib_$2083",
                "typeString": "library MathLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "946:23:11",
            "typeName": {
              "id": 2611,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "964:4:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 2614,
            "name": "ORACLE_DATA_SOURCE",
            "nodeType": "VariableDeclaration",
            "scope": 2806,
            "src": "992:32:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2613,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "992:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2616,
            "name": "ORACLE_QUERY",
            "nodeType": "VariableDeclaration",
            "scope": 2806,
            "src": "1030:26:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2615,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1030:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 2619,
            "name": "QUERY_CALLBACK_GAS",
            "nodeType": "VariableDeclaration",
            "scope": 2806,
            "src": "1062:48:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2617,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1062:4:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "313530303030",
              "id": 2618,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1104:6:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_150000_by_1",
                "typeString": "int_const 150000"
              },
              "value": "150000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2621,
            "name": "lastPriceQueryResult",
            "nodeType": "VariableDeclaration",
            "scope": 2806,
            "src": "1251:34:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2620,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1251:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2625,
            "name": "validQueryIDs",
            "nodeType": "VariableDeclaration",
            "scope": 2806,
            "src": "1291:38:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 2624,
              "keyType": {
                "id": 2622,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1299:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1291:24:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 2623,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1310:4:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2692,
              "nodeType": "Block",
              "src": "2895:718:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        },
                        "id": 2654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2652,
                          "name": "proofType_TLSNotary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3172,
                          "src": "2923:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "|",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2653,
                          "name": "proofStorage_IPFS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3175,
                          "src": "2945:17:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "src": "2923:39:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "id": 2651,
                      "name": "oraclize_setProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3610,
                      "src": "2905:17:11",
                      "typeDescriptions": {
                        "typeIdentifier":
                          "t_function_internal_nonpayable$_t_bytes1_$returns$__$",
                        "typeString": "function (bytes1)"
                      }
                    },
                    "id": 2655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2905:58:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2656,
                  "nodeType": "ExpressionStatement",
                  "src": "2905:58:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2657,
                      "name": "ORACLE_DATA_SOURCE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2614,
                      "src": "3083:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2658,
                      "name": "oracleDataSource",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2639,
                      "src": "3104:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3083:37:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2660,
                  "nodeType": "ExpressionStatement",
                  "src": "3083:37:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2661,
                      "name": "ORACLE_QUERY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2616,
                      "src": "3130:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2662,
                      "name": "oracleQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2641,
                      "src": "3145:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3130:26:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2664,
                  "nodeType": "ExpressionStatement",
                  "src": "3130:26:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2666,
                          "name": "EXPIRATION",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 767,
                          "src": "3174:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2667,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4938,
                          "src": "3187:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3174:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2665,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4939, 4940],
                      "referencedDeclaration": 4939,
                      "src": "3166:7:11",
                      "typeDescriptions": {
                        "typeIdentifier":
                          "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3166:25:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2670,
                  "nodeType": "ExpressionStatement",
                  "src": "3166:25:11"
                },
                {
                  "assignments": [2672],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2672,
                      "name": "secondsPerSixtyDays",
                      "nodeType": "VariableDeclaration",
                      "scope": 2693,
                      "src": "3402:24:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2671,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3402:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2680,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_5184000_by_1",
                      "typeString": "int_const 5184000"
                    },
                    "id": 2679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      },
                      "id": 2677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_3600_by_1",
                          "typeString": "int_const 3600"
                        },
                        "id": 2675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "3630",
                          "id": 2673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3429:2:11",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "60"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3630",
                          "id": 2674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3434:2:11",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "60"
                        },
                        "src": "3429:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3600_by_1",
                          "typeString": "int_const 3600"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "3234",
                        "id": 2676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3439:2:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_24_by_1",
                          "typeString": "int_const 24"
                        },
                        "value": "24"
                      },
                      "src": "3429:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "3630",
                      "id": 2678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3444:2:11",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_60_by_1",
                        "typeString": "int_const 60"
                      },
                      "value": "60"
                    },
                    "src": "3429:17:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_5184000_by_1",
                      "typeString": "int_const 5184000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3402:44:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2682,
                            "name": "EXPIRATION",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 767,
                            "src": "3464:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2683,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4938,
                            "src": "3477:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3464:16:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2685,
                          "name": "secondsPerSixtyDays",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2672,
                          "src": "3484:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3464:39:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2681,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4939, 4940],
                      "referencedDeclaration": 4939,
                      "src": "3456:7:11",
                      "typeDescriptions": {
                        "typeIdentifier":
                          "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3456:48:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2688,
                  "nodeType": "ExpressionStatement",
                  "src": "3456:48:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2689,
                      "name": "queryOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2805,
                      "src": "3514:11:11",
                      "typeDescriptions": {
                        "typeIdentifier":
                          "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3514:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2691,
                  "nodeType": "ExpressionStatement",
                  "src": "3514:13:11"
                }
              ]
            },
            "documentation":
              "@param contractName viewable name of this contract (BTC/ETH, LTC/ETH, etc)\n @param creatorAddress address of the person creating the contract\n @param marketTokenAddress address of our member token\n @param baseTokenAddress address of the ERC20 token that will be used for collateral and pricing\n @param contractSpecs array of unsigned integers including:\n floorPrice minimum tradeable price of this contract, contract enters settlement if breached\n capPrice maximum tradeable price of this contract, contract enters settlement if breached\n priceDecimalPlaces number of decimal places to convert our queried price from a floating point to\n an integer\n qtyMultiplier multiply traded qty by this value from base units of collateral token.\n expirationTimeStamp - seconds from epoch that this contract expires and enters settlement\n @param oracleDataSource a data-source such as \"URL\", \"WolframAlpha\", \"IPFS\"\n see http://docs.oraclize.it/#ethereum-quick-start-simple-query\n @param oracleQuery see http://docs.oraclize.it/#ethereum-quick-start-simple-query for examples",
            "id": 2693,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2644,
                    "name": "contractName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2627,
                    "src": "2763:12:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2645,
                    "name": "creatorAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2629,
                    "src": "2785:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2646,
                    "name": "marketTokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2631,
                    "src": "2809:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2647,
                    "name": "baseTokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2633,
                    "src": "2837:16:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2648,
                    "name": "contractSpecs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2637,
                    "src": "2863:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
                      "typeString": "uint256[5] memory"
                    }
                  }
                ],
                "id": 2649,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2643,
                  "name": "MarketContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1455,
                  "src": "2739:14:11",
                  "typeDescriptions": {
                    "typeIdentifier":
                      "t_type$_t_contract$_MarketContract_$1455_$",
                    "typeString": "type(contract MarketContract)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2739:143:11"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2627,
                  "name": "contractName",
                  "nodeType": "VariableDeclaration",
                  "scope": 2693,
                  "src": "2519:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2626,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2519:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2629,
                  "name": "creatorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2693,
                  "src": "2548:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2628,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2548:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2631,
                  "name": "marketTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2693,
                  "src": "2580:26:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2580:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2633,
                  "name": "baseTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2693,
                  "src": "2616:24:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2632,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2616:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2637,
                  "name": "contractSpecs",
                  "nodeType": "VariableDeclaration",
                  "scope": 2693,
                  "src": "2650:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
                    "typeString": "uint256[5]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2634,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2650:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2636,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "35",
                      "id": 2635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2655:1:11",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "5"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2650:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
                      "typeString": "uint256[5]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2639,
                  "name": "oracleDataSource",
                  "nodeType": "VariableDeclaration",
                  "scope": 2693,
                  "src": "2681:23:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2638,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2681:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2641,
                  "name": "oracleQuery",
                  "nodeType": "VariableDeclaration",
                  "scope": 2693,
                  "src": "2714:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2640,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2714:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2509:229:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 2650,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2895:0:11"
            },
            "scope": 2806,
            "src": "2498:1115:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2730,
              "nodeType": "Block",
              "src": "4054:548:11",
              "statements": [
                {
                  "assignments": [2697],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2697,
                      "name": "cost",
                      "nodeType": "VariableDeclaration",
                      "scope": 2731,
                      "src": "4064:9:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2696,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4064:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2702,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2699,
                        "name": "ORACLE_DATA_SOURCE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2614,
                        "src": "4094:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2700,
                        "name": "QUERY_CALLBACK_GAS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2619,
                        "src": "4114:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2698,
                      "name": "oraclize_getPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [3439, 3457],
                      "referencedDeclaration": 3457,
                      "src": "4076:17:11",
                      "typeDescriptions": {
                        "typeIdentifier":
                          "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString":
                          "function (string memory,uint256) returns (uint256)"
                      }
                    },
                    "id": 2701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4076:57:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4064:69:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2704,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4936,
                            "src": "4151:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4151:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2706,
                          "name": "cost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2697,
                          "src": "4164:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4151:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2703,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4939, 4940],
                      "referencedDeclaration": 4939,
                      "src": "4143:7:11",
                      "typeDescriptions": {
                        "typeIdentifier":
                          "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4143:26:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2709,
                  "nodeType": "ExpressionStatement",
                  "src": "4143:26:11"
                },
                {
                  "assignments": [2711],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2711,
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "scope": 2731,
                      "src": "4393:15:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2710,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4393:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2717,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2713,
                        "name": "ORACLE_DATA_SOURCE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2614,
                        "src": "4439:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2714,
                        "name": "ORACLE_QUERY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2616,
                        "src": "4471:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2715,
                        "name": "QUERY_CALLBACK_GAS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2619,
                        "src": "4497:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2712,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [3486, 3517, 3552, 3585],
                      "referencedDeclaration": 3585,
                      "src": "4411:14:11",
                      "typeDescriptions": {
                        "typeIdentifier":
                          "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString":
                          "function (string memory,string memory,uint256) returns (bytes32)"
                      }
                    },
                    "id": 2716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4411:114:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4393:132:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 2721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2719,
                          "name": "queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2711,
                          "src": "4543:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4554:1:11",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4543:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2718,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4939, 4940],
                      "referencedDeclaration": 4939,
                      "src": "4535:7:11",
                      "typeDescriptions": {
                        "typeIdentifier":
                          "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4535:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2723,
                  "nodeType": "ExpressionStatement",
                  "src": "4535:21:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2724,
                        "name": "validQueryIDs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2625,
                        "src": "4566:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 2726,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2725,
                        "name": "queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2711,
                        "src": "4580:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4566:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4591:4:11",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4566:29:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2729,
                  "nodeType": "ExpressionStatement",
                  "src": "4566:29:11"
                }
              ]
            },
            "documentation":
              "@notice allows a user to request an extra query to oracle in order to push the contract into\n settlement.  A user may call this as many times as they like, since they are the ones paying for\n the call to our oracle and post processing. This is useful for both a failsafe and as a way to\n settle a contract early if a price cap or floor has been breached.",
            "id": 2731,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "requestEarlySettlement",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2694,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4034:2:11"
            },
            "payable": true,
            "returnParameters": {
              "id": 2695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4054:0:11"
            },
            "scope": 2806,
            "src": "4003:599:11",
            "stateMutability": "payable",
            "superFunction": 1371,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2779,
              "nodeType": "Block",
              "src": "4954:456:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2741,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4936,
                            "src": "4972:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4972:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2743,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3597,
                            "src": "4986:18:11",
                            "typeDescriptions": {
                              "typeIdentifier":
                                "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 2744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4986:20:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4972:34:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2740,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4939, 4940],
                      "referencedDeclaration": 4939,
                      "src": "4964:7:11",
                      "typeDescriptions": {
                        "typeIdentifier":
                          "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4964:43:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2747,
                  "nodeType": "ExpressionStatement",
                  "src": "4964:43:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2749,
                          "name": "validQueryIDs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2625,
                          "src": "5025:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                            "typeString": "mapping(bytes32 => bool)"
                          }
                        },
                        "id": 2751,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2750,
                          "name": "queryID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2733,
                          "src": "5039:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5025:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2748,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4939, 4940],
                      "referencedDeclaration": 4939,
                      "src": "5017:7:11",
                      "typeDescriptions": {
                        "typeIdentifier":
                          "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5017:31:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2753,
                  "nodeType": "ExpressionStatement",
                  "src": "5017:31:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2754,
                      "name": "lastPriceQueryResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2621,
                      "src": "5097:20:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2755,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2735,
                      "src": "5120:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "5097:29:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2757,
                  "nodeType": "ExpressionStatement",
                  "src": "5097:29:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2758,
                      "name": "lastPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 769,
                      "src": "5136:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2760,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2735,
                          "src": "5157:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2761,
                          "name": "PRICE_DECIMAL_PLACES",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 763,
                          "src": "5165:20:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2759,
                        "name": "parseInt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3731,
                        "src": "5148:8:11",
                        "typeDescriptions": {
                          "typeIdentifier":
                            "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                          "typeString":
                            "function (string memory,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5148:38:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5136:50:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2764,
                  "nodeType": "ExpressionStatement",
                  "src": "5136:50:11"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2766,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2735,
                        "src": "5218:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2765,
                      "name": "UpdatedLastPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 787,
                      "src": "5201:16:11",
                      "typeDescriptions": {
                        "typeIdentifier":
                          "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 2767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5201:24:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2768,
                  "nodeType": "EmitStatement",
                  "src": "5196:29:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2769,
                      "name": "checkSettlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1440,
                      "src": "5235:15:11",
                      "typeDescriptions": {
                        "typeIdentifier":
                          "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5235:17:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2771,
                  "nodeType": "ExpressionStatement",
                  "src": "5235:17:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "5329:29:11",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2772,
                        "name": "validQueryIDs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2625,
                        "src": "5336:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 2774,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2773,
                        "name": "queryID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2733,
                        "src": "5350:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5336:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2776,
                  "nodeType": "ExpressionStatement",
                  "src": "5329:29:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2777,
                    "name": "proof",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2737,
                    "src": "5368:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 2778,
                  "nodeType": "ExpressionStatement",
                  "src": "5368:5:11"
                }
              ]
            },
            "documentation":
              "@notice only public for callbacks from oraclize, do not call\n @param queryID of the returning query, this should match our own internal mapping\n @param result query to be processed\n @param proof result proof",
            "id": 2780,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2733,
                  "name": "queryID",
                  "nodeType": "VariableDeclaration",
                  "scope": 2780,
                  "src": "4902:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2732,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4902:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2735,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 2780,
                  "src": "4919:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2734,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4919:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2737,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 2780,
                  "src": "4934:11:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2736,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4934:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4901:45:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 2739,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4954:0:11"
            },
            "scope": 2806,
            "src": "4882:528:11",
            "stateMutability": "nonpayable",
            "superFunction": 3424,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2804,
              "nodeType": "Block",
              "src": "5556:901:11",
              "statements": [
                {
                  "assignments": [2784],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2784,
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "scope": 2805,
                      "src": "6224:15:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2783,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6224:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2791,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2786,
                        "name": "EXPIRATION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 767,
                        "src": "6270:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2787,
                        "name": "ORACLE_DATA_SOURCE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2614,
                        "src": "6294:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2788,
                        "name": "ORACLE_QUERY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2616,
                        "src": "6326:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2789,
                        "name": "QUERY_CALLBACK_GAS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2619,
                        "src": "6352:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2785,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [3486, 3517, 3552, 3585],
                      "referencedDeclaration": 3552,
                      "src": "6242:14:11",
                      "typeDescriptions": {
                        "typeIdentifier":
                          "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString":
                          "function (uint256,string memory,string memory,uint256) returns (bytes32)"
                      }
                    },
                    "id": 2790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6242:138:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6224:156:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 2795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2793,
                          "name": "queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2784,
                          "src": "6398:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6409:1:11",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6398:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2792,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4939, 4940],
                      "referencedDeclaration": 4939,
                      "src": "6390:7:11",
                      "typeDescriptions": {
                        "typeIdentifier":
                          "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6390:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2797,
                  "nodeType": "ExpressionStatement",
                  "src": "6390:21:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2798,
                        "name": "validQueryIDs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2625,
                        "src": "6421:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 2800,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2799,
                        "name": "queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2784,
                        "src": "6435:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6421:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6446:4:11",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6421:29:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2803,
                  "nodeType": "ExpressionStatement",
                  "src": "6421:29:11"
                }
              ]
            },
            "documentation":
              "@dev call to oraclize to set up our query and record its hash.",
            "id": 2805,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "queryOracle",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2781,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5545:2:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 2782,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5556:0:11"
            },
            "scope": 2806,
            "src": "5525:932:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 2807,
        "src": "875:5584:11"
      }
    ],
    "src": "608:5851:11"
  },
  "legacyAST": {
    "absolutePath":
      "/home/pelsasser/MARKETProtocol/contracts/oraclize/MarketContractOraclize.sol",
    "exportedSymbols": {
      "MarketContractOraclize": [2806]
    },
    "id": 2807,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2602,
        "literals": ["solidity", "^", "0.4", ".23"],
        "nodeType": "PragmaDirective",
        "src": "608:24:11"
      },
      {
        "absolutePath":
          "/home/pelsasser/MARKETProtocol/contracts/oraclize/oraclizeAPI.sol",
        "file": "./oraclizeAPI.sol",
        "id": 2603,
        "nodeType": "ImportDirective",
        "scope": 2807,
        "sourceUnit": 3753,
        "src": "634:27:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath":
          "/home/pelsasser/MARKETProtocol/contracts/libraries/MathLib.sol",
        "file": "../libraries/MathLib.sol",
        "id": 2604,
        "nodeType": "ImportDirective",
        "scope": 2807,
        "sourceUnit": 2084,
        "src": "662:34:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath":
          "/home/pelsasser/MARKETProtocol/contracts/MarketContract.sol",
        "file": "../MarketContract.sol",
        "id": 2605,
        "nodeType": "ImportDirective",
        "scope": 2807,
        "sourceUnit": 1456,
        "src": "697:31:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2606,
              "name": "MarketContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1455,
              "src": "910:14:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MarketContract_$1455",
                "typeString": "contract MarketContract"
              }
            },
            "id": 2607,
            "nodeType": "InheritanceSpecifier",
            "src": "910:14:11"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2608,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3752,
              "src": "926:13:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$3752",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 2609,
            "nodeType": "InheritanceSpecifier",
            "src": "926:13:11"
          }
        ],
        "contractDependencies": [55, 1455, 3752],
        "contractKind": "contract",
        "documentation":
          "@title MarketContract first example of a MarketProtocol contract using Oraclize services\n @author Phil Elsasser <phil@marketprotocol.io>",
        "fullyImplemented": true,
        "id": 2806,
        "linearizedBaseContracts": [2806, 3752, 1455, 55],
        "name": "MarketContractOraclize",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2612,
            "libraryName": {
              "contractScope": null,
              "id": 2610,
              "name": "MathLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2083,
              "src": "952:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MathLib_$2083",
                "typeString": "library MathLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "946:23:11",
            "typeName": {
              "id": 2611,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "964:4:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 2614,
            "name": "ORACLE_DATA_SOURCE",
            "nodeType": "VariableDeclaration",
            "scope": 2806,
            "src": "992:32:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2613,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "992:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2616,
            "name": "ORACLE_QUERY",
            "nodeType": "VariableDeclaration",
            "scope": 2806,
            "src": "1030:26:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2615,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1030:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 2619,
            "name": "QUERY_CALLBACK_GAS",
            "nodeType": "VariableDeclaration",
            "scope": 2806,
            "src": "1062:48:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2617,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1062:4:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "313530303030",
              "id": 2618,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1104:6:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_150000_by_1",
                "typeString": "int_const 150000"
              },
              "value": "150000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2621,
            "name": "lastPriceQueryResult",
            "nodeType": "VariableDeclaration",
            "scope": 2806,
            "src": "1251:34:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2620,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1251:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2625,
            "name": "validQueryIDs",
            "nodeType": "VariableDeclaration",
            "scope": 2806,
            "src": "1291:38:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 2624,
              "keyType": {
                "id": 2622,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1299:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1291:24:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 2623,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1310:4:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2692,
              "nodeType": "Block",
              "src": "2895:718:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        },
                        "id": 2654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2652,
                          "name": "proofType_TLSNotary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3172,
                          "src": "2923:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "|",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2653,
                          "name": "proofStorage_IPFS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3175,
                          "src": "2945:17:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "src": "2923:39:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "id": 2651,
                      "name": "oraclize_setProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3610,
                      "src": "2905:17:11",
                      "typeDescriptions": {
                        "typeIdentifier":
                          "t_function_internal_nonpayable$_t_bytes1_$returns$__$",
                        "typeString": "function (bytes1)"
                      }
                    },
                    "id": 2655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2905:58:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2656,
                  "nodeType": "ExpressionStatement",
                  "src": "2905:58:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2657,
                      "name": "ORACLE_DATA_SOURCE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2614,
                      "src": "3083:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2658,
                      "name": "oracleDataSource",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2639,
                      "src": "3104:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3083:37:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2660,
                  "nodeType": "ExpressionStatement",
                  "src": "3083:37:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2661,
                      "name": "ORACLE_QUERY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2616,
                      "src": "3130:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2662,
                      "name": "oracleQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2641,
                      "src": "3145:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3130:26:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2664,
                  "nodeType": "ExpressionStatement",
                  "src": "3130:26:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2666,
                          "name": "EXPIRATION",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 767,
                          "src": "3174:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2667,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4938,
                          "src": "3187:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3174:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2665,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4939, 4940],
                      "referencedDeclaration": 4939,
                      "src": "3166:7:11",
                      "typeDescriptions": {
                        "typeIdentifier":
                          "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3166:25:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2670,
                  "nodeType": "ExpressionStatement",
                  "src": "3166:25:11"
                },
                {
                  "assignments": [2672],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2672,
                      "name": "secondsPerSixtyDays",
                      "nodeType": "VariableDeclaration",
                      "scope": 2693,
                      "src": "3402:24:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2671,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3402:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2680,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_5184000_by_1",
                      "typeString": "int_const 5184000"
                    },
                    "id": 2679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      },
                      "id": 2677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_3600_by_1",
                          "typeString": "int_const 3600"
                        },
                        "id": 2675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "3630",
                          "id": 2673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3429:2:11",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "60"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3630",
                          "id": 2674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3434:2:11",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "60"
                        },
                        "src": "3429:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3600_by_1",
                          "typeString": "int_const 3600"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "3234",
                        "id": 2676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3439:2:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_24_by_1",
                          "typeString": "int_const 24"
                        },
                        "value": "24"
                      },
                      "src": "3429:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "3630",
                      "id": 2678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3444:2:11",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_60_by_1",
                        "typeString": "int_const 60"
                      },
                      "value": "60"
                    },
                    "src": "3429:17:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_5184000_by_1",
                      "typeString": "int_const 5184000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3402:44:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2682,
                            "name": "EXPIRATION",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 767,
                            "src": "3464:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2683,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4938,
                            "src": "3477:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3464:16:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2685,
                          "name": "secondsPerSixtyDays",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2672,
                          "src": "3484:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3464:39:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2681,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4939, 4940],
                      "referencedDeclaration": 4939,
                      "src": "3456:7:11",
                      "typeDescriptions": {
                        "typeIdentifier":
                          "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3456:48:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2688,
                  "nodeType": "ExpressionStatement",
                  "src": "3456:48:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2689,
                      "name": "queryOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2805,
                      "src": "3514:11:11",
                      "typeDescriptions": {
                        "typeIdentifier":
                          "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3514:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2691,
                  "nodeType": "ExpressionStatement",
                  "src": "3514:13:11"
                }
              ]
            },
            "documentation":
              "@param contractName viewable name of this contract (BTC/ETH, LTC/ETH, etc)\n @param creatorAddress address of the person creating the contract\n @param marketTokenAddress address of our member token\n @param baseTokenAddress address of the ERC20 token that will be used for collateral and pricing\n @param contractSpecs array of unsigned integers including:\n floorPrice minimum tradeable price of this contract, contract enters settlement if breached\n capPrice maximum tradeable price of this contract, contract enters settlement if breached\n priceDecimalPlaces number of decimal places to convert our queried price from a floating point to\n an integer\n qtyMultiplier multiply traded qty by this value from base units of collateral token.\n expirationTimeStamp - seconds from epoch that this contract expires and enters settlement\n @param oracleDataSource a data-source such as \"URL\", \"WolframAlpha\", \"IPFS\"\n see http://docs.oraclize.it/#ethereum-quick-start-simple-query\n @param oracleQuery see http://docs.oraclize.it/#ethereum-quick-start-simple-query for examples",
            "id": 2693,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2644,
                    "name": "contractName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2627,
                    "src": "2763:12:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2645,
                    "name": "creatorAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2629,
                    "src": "2785:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2646,
                    "name": "marketTokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2631,
                    "src": "2809:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2647,
                    "name": "baseTokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2633,
                    "src": "2837:16:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2648,
                    "name": "contractSpecs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2637,
                    "src": "2863:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
                      "typeString": "uint256[5] memory"
                    }
                  }
                ],
                "id": 2649,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2643,
                  "name": "MarketContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1455,
                  "src": "2739:14:11",
                  "typeDescriptions": {
                    "typeIdentifier":
                      "t_type$_t_contract$_MarketContract_$1455_$",
                    "typeString": "type(contract MarketContract)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2739:143:11"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2627,
                  "name": "contractName",
                  "nodeType": "VariableDeclaration",
                  "scope": 2693,
                  "src": "2519:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2626,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2519:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2629,
                  "name": "creatorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2693,
                  "src": "2548:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2628,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2548:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2631,
                  "name": "marketTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2693,
                  "src": "2580:26:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2580:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2633,
                  "name": "baseTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2693,
                  "src": "2616:24:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2632,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2616:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2637,
                  "name": "contractSpecs",
                  "nodeType": "VariableDeclaration",
                  "scope": 2693,
                  "src": "2650:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
                    "typeString": "uint256[5]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2634,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2650:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2636,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "35",
                      "id": 2635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2655:1:11",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "5"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2650:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
                      "typeString": "uint256[5]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2639,
                  "name": "oracleDataSource",
                  "nodeType": "VariableDeclaration",
                  "scope": 2693,
                  "src": "2681:23:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2638,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2681:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2641,
                  "name": "oracleQuery",
                  "nodeType": "VariableDeclaration",
                  "scope": 2693,
                  "src": "2714:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2640,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2714:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2509:229:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 2650,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2895:0:11"
            },
            "scope": 2806,
            "src": "2498:1115:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2730,
              "nodeType": "Block",
              "src": "4054:548:11",
              "statements": [
                {
                  "assignments": [2697],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2697,
                      "name": "cost",
                      "nodeType": "VariableDeclaration",
                      "scope": 2731,
                      "src": "4064:9:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2696,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4064:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2702,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2699,
                        "name": "ORACLE_DATA_SOURCE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2614,
                        "src": "4094:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2700,
                        "name": "QUERY_CALLBACK_GAS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2619,
                        "src": "4114:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2698,
                      "name": "oraclize_getPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [3439, 3457],
                      "referencedDeclaration": 3457,
                      "src": "4076:17:11",
                      "typeDescriptions": {
                        "typeIdentifier":
                          "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString":
                          "function (string memory,uint256) returns (uint256)"
                      }
                    },
                    "id": 2701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4076:57:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4064:69:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2704,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4936,
                            "src": "4151:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4151:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2706,
                          "name": "cost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2697,
                          "src": "4164:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4151:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2703,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4939, 4940],
                      "referencedDeclaration": 4939,
                      "src": "4143:7:11",
                      "typeDescriptions": {
                        "typeIdentifier":
                          "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4143:26:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2709,
                  "nodeType": "ExpressionStatement",
                  "src": "4143:26:11"
                },
                {
                  "assignments": [2711],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2711,
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "scope": 2731,
                      "src": "4393:15:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2710,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4393:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2717,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2713,
                        "name": "ORACLE_DATA_SOURCE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2614,
                        "src": "4439:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2714,
                        "name": "ORACLE_QUERY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2616,
                        "src": "4471:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2715,
                        "name": "QUERY_CALLBACK_GAS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2619,
                        "src": "4497:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2712,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [3486, 3517, 3552, 3585],
                      "referencedDeclaration": 3585,
                      "src": "4411:14:11",
                      "typeDescriptions": {
                        "typeIdentifier":
                          "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString":
                          "function (string memory,string memory,uint256) returns (bytes32)"
                      }
                    },
                    "id": 2716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4411:114:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4393:132:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 2721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2719,
                          "name": "queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2711,
                          "src": "4543:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4554:1:11",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4543:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2718,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4939, 4940],
                      "referencedDeclaration": 4939,
                      "src": "4535:7:11",
                      "typeDescriptions": {
                        "typeIdentifier":
                          "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4535:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2723,
                  "nodeType": "ExpressionStatement",
                  "src": "4535:21:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2724,
                        "name": "validQueryIDs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2625,
                        "src": "4566:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 2726,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2725,
                        "name": "queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2711,
                        "src": "4580:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4566:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4591:4:11",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4566:29:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2729,
                  "nodeType": "ExpressionStatement",
                  "src": "4566:29:11"
                }
              ]
            },
            "documentation":
              "@notice allows a user to request an extra query to oracle in order to push the contract into\n settlement.  A user may call this as many times as they like, since they are the ones paying for\n the call to our oracle and post processing. This is useful for both a failsafe and as a way to\n settle a contract early if a price cap or floor has been breached.",
            "id": 2731,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "requestEarlySettlement",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2694,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4034:2:11"
            },
            "payable": true,
            "returnParameters": {
              "id": 2695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4054:0:11"
            },
            "scope": 2806,
            "src": "4003:599:11",
            "stateMutability": "payable",
            "superFunction": 1371,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2779,
              "nodeType": "Block",
              "src": "4954:456:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2741,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4936,
                            "src": "4972:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4972:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2743,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3597,
                            "src": "4986:18:11",
                            "typeDescriptions": {
                              "typeIdentifier":
                                "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 2744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4986:20:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4972:34:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2740,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4939, 4940],
                      "referencedDeclaration": 4939,
                      "src": "4964:7:11",
                      "typeDescriptions": {
                        "typeIdentifier":
                          "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4964:43:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2747,
                  "nodeType": "ExpressionStatement",
                  "src": "4964:43:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2749,
                          "name": "validQueryIDs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2625,
                          "src": "5025:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                            "typeString": "mapping(bytes32 => bool)"
                          }
                        },
                        "id": 2751,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2750,
                          "name": "queryID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2733,
                          "src": "5039:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5025:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2748,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4939, 4940],
                      "referencedDeclaration": 4939,
                      "src": "5017:7:11",
                      "typeDescriptions": {
                        "typeIdentifier":
                          "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5017:31:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2753,
                  "nodeType": "ExpressionStatement",
                  "src": "5017:31:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2754,
                      "name": "lastPriceQueryResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2621,
                      "src": "5097:20:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2755,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2735,
                      "src": "5120:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "5097:29:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2757,
                  "nodeType": "ExpressionStatement",
                  "src": "5097:29:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2758,
                      "name": "lastPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 769,
                      "src": "5136:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2760,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2735,
                          "src": "5157:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2761,
                          "name": "PRICE_DECIMAL_PLACES",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 763,
                          "src": "5165:20:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2759,
                        "name": "parseInt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3731,
                        "src": "5148:8:11",
                        "typeDescriptions": {
                          "typeIdentifier":
                            "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                          "typeString":
                            "function (string memory,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5148:38:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5136:50:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2764,
                  "nodeType": "ExpressionStatement",
                  "src": "5136:50:11"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2766,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2735,
                        "src": "5218:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2765,
                      "name": "UpdatedLastPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 787,
                      "src": "5201:16:11",
                      "typeDescriptions": {
                        "typeIdentifier":
                          "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 2767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5201:24:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2768,
                  "nodeType": "EmitStatement",
                  "src": "5196:29:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2769,
                      "name": "checkSettlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1440,
                      "src": "5235:15:11",
                      "typeDescriptions": {
                        "typeIdentifier":
                          "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5235:17:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2771,
                  "nodeType": "ExpressionStatement",
                  "src": "5235:17:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "5329:29:11",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2772,
                        "name": "validQueryIDs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2625,
                        "src": "5336:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 2774,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2773,
                        "name": "queryID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2733,
                        "src": "5350:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5336:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2776,
                  "nodeType": "ExpressionStatement",
                  "src": "5329:29:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2777,
                    "name": "proof",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2737,
                    "src": "5368:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 2778,
                  "nodeType": "ExpressionStatement",
                  "src": "5368:5:11"
                }
              ]
            },
            "documentation":
              "@notice only public for callbacks from oraclize, do not call\n @param queryID of the returning query, this should match our own internal mapping\n @param result query to be processed\n @param proof result proof",
            "id": 2780,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2733,
                  "name": "queryID",
                  "nodeType": "VariableDeclaration",
                  "scope": 2780,
                  "src": "4902:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2732,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4902:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2735,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 2780,
                  "src": "4919:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2734,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4919:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2737,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 2780,
                  "src": "4934:11:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2736,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4934:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4901:45:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 2739,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4954:0:11"
            },
            "scope": 2806,
            "src": "4882:528:11",
            "stateMutability": "nonpayable",
            "superFunction": 3424,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2804,
              "nodeType": "Block",
              "src": "5556:901:11",
              "statements": [
                {
                  "assignments": [2784],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2784,
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "scope": 2805,
                      "src": "6224:15:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2783,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6224:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2791,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2786,
                        "name": "EXPIRATION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 767,
                        "src": "6270:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2787,
                        "name": "ORACLE_DATA_SOURCE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2614,
                        "src": "6294:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2788,
                        "name": "ORACLE_QUERY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2616,
                        "src": "6326:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2789,
                        "name": "QUERY_CALLBACK_GAS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2619,
                        "src": "6352:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2785,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [3486, 3517, 3552, 3585],
                      "referencedDeclaration": 3552,
                      "src": "6242:14:11",
                      "typeDescriptions": {
                        "typeIdentifier":
                          "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString":
                          "function (uint256,string memory,string memory,uint256) returns (bytes32)"
                      }
                    },
                    "id": 2790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6242:138:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6224:156:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 2795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2793,
                          "name": "queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2784,
                          "src": "6398:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6409:1:11",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6398:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2792,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4939, 4940],
                      "referencedDeclaration": 4939,
                      "src": "6390:7:11",
                      "typeDescriptions": {
                        "typeIdentifier":
                          "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6390:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2797,
                  "nodeType": "ExpressionStatement",
                  "src": "6390:21:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2798,
                        "name": "validQueryIDs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2625,
                        "src": "6421:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 2800,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2799,
                        "name": "queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2784,
                        "src": "6435:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6421:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6446:4:11",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6421:29:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2803,
                  "nodeType": "ExpressionStatement",
                  "src": "6421:29:11"
                }
              ]
            },
            "documentation":
              "@dev call to oraclize to set up our query and record its hash.",
            "id": 2805,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "queryOracle",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2781,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5545:2:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 2782,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5556:0:11"
            },
            "scope": 2806,
            "src": "5525:932:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 2807,
        "src": "875:5584:11"
      }
    ],
    "src": "608:5851:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-05-25T01:35:13.868Z"
}
